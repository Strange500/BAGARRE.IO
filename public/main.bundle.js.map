{"version":3,"file":"main.bundle.js","mappings":"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","sources":["webpack://bagarre.io/webpack/bootstrap","webpack://bagarre.io/webpack/runtime/define property getters","webpack://bagarre.io/webpack/runtime/hasOwnProperty shorthand","webpack://bagarre.io/webpack/runtime/make namespace object","webpack://bagarre.io/./src/client/class/Score.js","webpack://bagarre.io/./src/client/class/Player.js","webpack://bagarre.io/./node_modules/@timohausmann/quadtree-ts/dist/quadtree.esm.js","webpack://bagarre.io/./src/client/class/Map.js","webpack://bagarre.io/./src/client/class/Food.js","webpack://bagarre.io/./node_modules/engine.io-parser/build/esm/commons.js","webpack://bagarre.io/./node_modules/engine.io-parser/build/esm/encodePacket.browser.js","webpack://bagarre.io/./node_modules/engine.io-parser/build/esm/contrib/base64-arraybuffer.js","webpack://bagarre.io/./node_modules/engine.io-parser/build/esm/decodePacket.browser.js","webpack://bagarre.io/./node_modules/engine.io-parser/build/esm/index.js","webpack://bagarre.io/./node_modules/@socket.io/component-emitter/lib/esm/index.js","webpack://bagarre.io/./node_modules/engine.io-client/build/esm/globals.js","webpack://bagarre.io/./node_modules/engine.io-client/build/esm/util.js","webpack://bagarre.io/./node_modules/engine.io-client/build/esm/transport.js","webpack://bagarre.io/./node_modules/engine.io-client/build/esm/contrib/parseqs.js","webpack://bagarre.io/./node_modules/engine.io-client/build/esm/transports/polling.js","webpack://bagarre.io/./node_modules/engine.io-client/build/esm/contrib/has-cors.js","webpack://bagarre.io/./node_modules/engine.io-client/build/esm/transports/polling-xhr.js","webpack://bagarre.io/./node_modules/engine.io-client/build/esm/transports/websocket.js","webpack://bagarre.io/./node_modules/engine.io-client/build/esm/transports/index.js","webpack://bagarre.io/./node_modules/engine.io-client/build/esm/transports/webtransport.js","webpack://bagarre.io/./node_modules/engine.io-client/build/esm/contrib/parseuri.js","webpack://bagarre.io/./node_modules/engine.io-client/build/esm/socket.js","webpack://bagarre.io/./node_modules/socket.io-parser/build/esm/is-binary.js","webpack://bagarre.io/./node_modules/socket.io-parser/build/esm/binary.js","webpack://bagarre.io/./node_modules/socket.io-parser/build/esm/index.js","webpack://bagarre.io/./node_modules/socket.io-client/build/esm/on.js","webpack://bagarre.io/./node_modules/socket.io-client/build/esm/socket.js","webpack://bagarre.io/./node_modules/socket.io-client/build/esm/contrib/backo2.js","webpack://bagarre.io/./node_modules/socket.io-client/build/esm/manager.js","webpack://bagarre.io/./node_modules/socket.io-client/build/esm/index.js","webpack://bagarre.io/./node_modules/socket.io-client/build/esm/url.js","webpack://bagarre.io/./src/server/movement.js","webpack://bagarre.io/./src/client/Game.js","webpack://bagarre.io/./src/client/handlers/ScoreHandler.js","webpack://bagarre.io/./src/client/handlers/BonusHandler.js","webpack://bagarre.io/./src/client/handlers/MovementPlayerHandler.js","webpack://bagarre.io/./src/server/pHandler.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export class Score {\r\n\tfoodScore;\r\n\tbonusScore;\r\n\tcoefScore;\r\n\tkillScore;\r\n\texp;\r\n\tlevel;\r\n\r\n\tconstructor() {\r\n\t\tthis.foodScore = 0;\r\n\t\tthis.bonusScore = 0;\r\n\t\tthis.coefScore = 1;\r\n\t\tthis.killScore = 0;\r\n\t\tthis.exp = 0;\r\n\t\tthis.level = 1;\r\n\t}\r\n\r\n\taddFoodScore(amount) {\r\n\t\tthis.foodScore += amount;\r\n\t}\r\n\r\n\taddBonusScore(amount) {\r\n\t\tthis.bonusScore += amount;\r\n\t}\r\n\r\n\taddKillScore(amount) {\r\n\t\tthis.killScore += amount;\r\n\t}\r\n\r\n\tupdateCoef(coef) {\r\n\t\tthis.coefScore = coef;\r\n\t}\r\n\r\n\tapplyScoreDecay(rate) {\r\n\t\tthis.foodScore = Math.max(0, this.foodScore - rate);\r\n\t\tthis.bonusScore = Math.max(0, this.bonusScore - rate);\r\n\t\tthis.killScore = Math.max(0, this.killScore - rate);\r\n\t}\r\n\r\n\tgainExp(amount) {\r\n\t\tthis.exp += amount;\r\n\t\tif (this.exp >= this.level * 10) {\r\n\t\t\tthis.exp = 0;\r\n\t\t\tthis.level++;\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tgetTotalScore() {\r\n\t\treturn (this.foodScore + this.bonusScore + this.killScore) * this.coefScore;\r\n\t}\r\n\r\n\treset() {\r\n\t\tthis.foodScore = 0;\r\n\t\tthis.bonusScore = 0;\r\n\t\tthis.killScore = 0;\r\n\t\tthis.exp = 0;\r\n\t\tthis.level = 1;\r\n\t\tthis.coefScore = 1;\r\n\t}\r\n}\r\n","import { Score } from './Score.js';\nexport class Player {\n\tid;\n\tname;\n\tsize;\n\tscore;\n\tx;\n\ty;\n\txDirection;\n\tyDirection;\n\tspeed;\n\tready;\n\tdeg;\n\tkeyPressed;\n\n\tconstructor(name, x, y, id) {\n\t\tthis.name = name;\n\t\tthis.size = 20;\n\t\tthis.score = new Score();\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.xDirection = 0;\n\t\tthis.yDirection = 0;\n\t\tthis.id = id;\n\t\tthis.speed = 5;\n\t\tthis.ready = false;\n\t\tthis.keyPressed = [];\n\t\tthis.deg = Math.random() * 2 * Math.PI;\n\t\tthis.targetDeg = this.deg;\n\t}\n\n\tincreaseSize(amount) {\n\t\tthis.size += amount;\n\t}\n\n\taddFood(amount) {\n\t\tthis.score.addFoodScore(amount / 10);\n\t\tthis.increaseSize(amount / 10);\n\t\treturn this.score.gainExp(amount);\n\n\t}\n\n\taddBonus(amount) {\n\t\tthis.score.addBonusScore(amount);\n\t}\n\n\taddKill(amount) {\n\t\tthis.score.addKillScore(amount);\n\t\tthis.increaseSize(amount * 0.2);\n\t\treturn this.score.gainExp(amount);\n\t}\n\n\tapplyDecay(rate) {\n\t\tthis.score.applyScoreDecay(rate);\n\t}\n\n\treset() {\n\t\tthis.size = 1;\n\t\tthis.score.reset();\n\t}\n}","/**\n * Class representing a Quadtree node.\n *\n * @example\n * ```typescript\n * const tree = new Quadtree({\n *   width: 100,\n *   height: 100,\n *   x: 0,           // optional, default:  0\n *   y: 0,           // optional, default:  0\n *   maxObjects: 10, // optional, default: 10\n *   maxLevels: 4,   // optional, default:  4\n * });\n * ```\n *\n * @example Typescript: If you like to be explicit, you optionally can pass in a generic type for objects to be stored in the Quadtree:\n * ```typescript\n * class GameEntity extends Rectangle {\n *   ...\n * }\n * const tree = new Quadtree<GameEntity>({\n *   width: 100,\n *   height: 100,\n * });\n * ```\n */\nclass Quadtree {\n    /**\n     * Quadtree Constructor\n     * @param props - bounds and properties of the node\n     * @param level - depth level (internal use only, required for subnodes)\n     */\n    constructor(props, level = 0) {\n        this.bounds = {\n            x: props.x || 0,\n            y: props.y || 0,\n            width: props.width,\n            height: props.height,\n        };\n        this.maxObjects = (typeof props.maxObjects === 'number') ? props.maxObjects : 10;\n        this.maxLevels = (typeof props.maxLevels === 'number') ? props.maxLevels : 4;\n        this.level = level;\n        this.objects = [];\n        this.nodes = [];\n    }\n    /**\n     * Get the quadrant (subnode indexes) an object belongs to.\n     *\n     * @example Mostly for internal use but you can call it like so:\n     * ```typescript\n     * const tree = new Quadtree({ width: 100, height: 100 });\n     * const rectangle = new Rectangle({ x: 25, y: 25, width: 10, height: 10 });\n     * const indexes = tree.getIndex(rectangle);\n     * console.log(indexes); // [1]\n     * ```\n     *\n     * @param obj - object to be checked\n     * @returns Array containing indexes of intersecting subnodes (0-3 = top-right, top-left, bottom-left, bottom-right).\n     */\n    getIndex(obj) {\n        return obj.qtIndex(this.bounds);\n    }\n    /**\n     * Split the node into 4 subnodes.\n     * @internal Mostly for internal use! You should only call this yourself if you know what you are doing.\n     *\n     * @example Manual split:\n     * ```typescript\n     * const tree = new Quadtree({ width: 100, height: 100 });\n     * tree.split();\n     * console.log(tree); // now tree has four subnodes\n     * ```\n     */\n    split() {\n        const level = this.level + 1, width = this.bounds.width / 2, height = this.bounds.height / 2, x = this.bounds.x, y = this.bounds.y;\n        const coords = [\n            { x: x + width, y: y },\n            { x: x, y: y },\n            { x: x, y: y + height },\n            { x: x + width, y: y + height },\n        ];\n        for (let i = 0; i < 4; i++) {\n            this.nodes[i] = new Quadtree({\n                x: coords[i].x,\n                y: coords[i].y,\n                width,\n                height,\n                maxObjects: this.maxObjects,\n                maxLevels: this.maxLevels,\n            }, level);\n        }\n    }\n    /**\n     * Insert an object into the node. If the node\n     * exceeds the capacity, it will split and add all\n     * objects to their corresponding subnodes.\n     *\n     * @example you can use any shape here (or object with a qtIndex method, see README):\n     * ```typescript\n     * const tree = new Quadtree({ width: 100, height: 100 });\n     * tree.insert(new Rectangle({ x: 25, y: 25, width: 10, height: 10, data: 'data' }));\n     * tree.insert(new Circle({ x: 25, y: 25, r: 10, data: 512 }));\n     * tree.insert(new Line({ x1: 25, y1: 25, x2: 60, y2: 40, data: { custom: 'property'} }));\n     * ```\n     *\n     * @param obj - Object to be added.\n     */\n    insert(obj) {\n        //if we have subnodes, call insert on matching subnodes\n        if (this.nodes.length) {\n            const indexes = this.getIndex(obj);\n            for (let i = 0; i < indexes.length; i++) {\n                this.nodes[indexes[i]].insert(obj);\n            }\n            return;\n        }\n        //otherwise, store object here\n        this.objects.push(obj);\n        //maxObjects reached\n        if (this.objects.length > this.maxObjects && this.level < this.maxLevels) {\n            //split if we don't already have subnodes\n            if (!this.nodes.length) {\n                this.split();\n            }\n            //add all objects to their corresponding subnode\n            for (let i = 0; i < this.objects.length; i++) {\n                const indexes = this.getIndex(this.objects[i]);\n                for (let k = 0; k < indexes.length; k++) {\n                    this.nodes[indexes[k]].insert(this.objects[i]);\n                }\n            }\n            //clean up this node\n            this.objects = [];\n        }\n    }\n    /**\n     * Return all objects that could collide with the given geometry.\n     *\n     * @example Just like insert, you can use any shape here (or object with a qtIndex method, see README):\n     * ```typescript\n     * tree.retrieve(new Rectangle({ x: 25, y: 25, width: 10, height: 10, data: 'data' }));\n     * tree.retrieve(new Circle({ x: 25, y: 25, r: 10, data: 512 }));\n     * tree.retrieve(new Line({ x1: 25, y1: 25, x2: 60, y2: 40, data: { custom: 'property'} }));\n     * ```\n     *\n     * @param obj - geometry to be checked\n     * @returns Array containing all detected objects.\n     */\n    retrieve(obj) {\n        const indexes = this.getIndex(obj);\n        let returnObjects = this.objects;\n        //if we have subnodes, retrieve their objects\n        if (this.nodes.length) {\n            for (let i = 0; i < indexes.length; i++) {\n                returnObjects = returnObjects.concat(this.nodes[indexes[i]].retrieve(obj));\n            }\n        }\n        // remove duplicates\n        if (this.level === 0) {\n            return Array.from(new Set(returnObjects));\n        }\n        return returnObjects;\n    }\n    /**\n     * Remove an object from the tree.\n     * If you have to remove many objects, consider clearing the entire tree and rebuilding it or use the `fast` flag to cleanup after the last removal.\n     * @beta\n     *\n     * @example\n     * ```typescript\n     * const tree = new Quadtree({ width: 100, height: 100 });\n     * const circle = new Circle({ x: 25, y: 25, r: 10, data: 512 });\n     * tree.insert(circle);\n     * tree.remove(circle);\n     * ```\n     *\n     * @example Bulk fast removals and final cleanup:\n     * ```javascript\n     * const tree = new Quadtree({ width: 100, height: 100 });\n     * const rects = [];\n     *  for(let i=0; i<20; i++) {\n     *    rects[i] = new Rectangle({ x: 25, y: 25, width: 50, height: 50 });\n     *    tree.insert(rects[i]);\n     *  }\n     *  for(let i=rects.length-1; i>0; i--) {\n     *    //fast=true – just remove the object (may leaves vacant subnodes)\n     *    //fast=false – cleanup empty subnodes (default)\n     *    const fast = (i !== 0);\n     *    tree.remove(rects[i], fast);\n     *  }\n     * ```\n     *\n     * @param obj - Object to be removed.\n     * @param fast - Set to true to increase performance temporarily by preventing cleanup of empty subnodes (optional, default: false).\n     * @returns Weather or not the object was removed from THIS node (no recursive check).\n     */\n    remove(obj, fast = false) {\n        const indexOf = this.objects.indexOf(obj);\n        // remove objects\n        if (indexOf > -1) {\n            this.objects.splice(indexOf, 1);\n        }\n        // remove from all subnodes\n        for (let i = 0; i < this.nodes.length; i++) {\n            this.nodes[i].remove(obj);\n        }\n        // remove all empty subnodes\n        if (this.level === 0 && !fast) {\n            this.join();\n        }\n        return (indexOf !== -1);\n    }\n    /**\n     * Update an object already in the tree (shorthand for remove and insert).\n     * If you have to update many objects, consider clearing and rebuilding the\n     * entire tree or use the `fast` flag to cleanup after the last update.\n     * @beta\n     *\n     * @example\n     * ```typescript\n     * const tree = new Quadtree({ width: 100, height: 100, maxObjects: 1 });\n     * const rect1 = new Rectangle({ x: 25, y: 25, width: 10, height: 10 });\n     * const rect2 = new Rectangle({ x: 25, y: 25, width: 10, height: 10 });\n     * tree.insert(rect1);\n     * tree.insert(rect2);\n     * rect1.x = 75;\n     * rect1.y = 75;\n     * tree.update(rect1);\n     * ```\n     * @example Bulk fast update and final cleanup:\n     * ```javascript\n     * const tree = new Quadtree({ width: 100, height: 100 });\n     * const rects = [];\n     *  for(let i=0; i<20; i++) {\n     *    rects[i] = new Rectangle({ x: 20, y: 20, width: 20, height: 20 });\n     *    tree.insert(rects[i]);\n     *  }\n     *  for(let i=rects.length-1; i>0; i--) {\n     *    rects[i].x = 20 + Math.random()*60;\n     *    rects[i].y = 20 + Math.random()*60;\n     *    //fast=true – just re-insert the object (may leaves vacant subnodes)\n     *    //fast=false – cleanup empty subnodes (default)\n     *    const fast = (i !== 0);\n     *    tree.update(rects[i], fast);\n     *  }\n     * ```\n     *\n     * @param obj - Object to be updated.\n     * @param fast - Set to true to increase performance temporarily by preventing cleanup of empty subnodes (optional, default: false).\n     */\n    update(obj, fast = false) {\n        this.remove(obj, fast);\n        this.insert(obj);\n    }\n    /**\n     * The opposite of a split: try to merge and dissolve subnodes.\n     * @beta\n     * @internal Mostly for internal use! You should only call this yourself if you know what you are doing.\n     *\n     * @example Manual join:\n     * ```typescript\n     * const tree = new Quadtree({ width: 100, height: 100 });\n     * tree.split();\n     * console.log(tree.nodes.length); // 4\n     * tree.join();\n     * console.log(tree.nodes.length); // 0\n     * ```\n     *\n     * @returns The objects from this node and all subnodes combined.\n     */\n    join() {\n        // recursive join\n        let allObjects = Array.from(this.objects);\n        for (let i = 0; i < this.nodes.length; i++) {\n            const bla = this.nodes[i].join();\n            allObjects = allObjects.concat(bla);\n        }\n        // remove duplicates\n        const uniqueObjects = Array.from(new Set(allObjects));\n        if (uniqueObjects.length <= this.maxObjects) {\n            this.objects = uniqueObjects;\n            for (let i = 0; i < this.nodes.length; i++) {\n                this.nodes[i].objects = [];\n            }\n            this.nodes = [];\n        }\n        return allObjects;\n    }\n    /**\n     * Clear the Quadtree.\n     *\n     * @example\n     * ```typescript\n     * const tree = new Quadtree({ width: 100, height: 100 });\n     * tree.insert(new Circle({ x: 25, y: 25, r: 10 }));\n     * tree.clear();\n     * console.log(tree); // tree.objects and tree.nodes are empty\n     * ```\n     */\n    clear() {\n        this.objects = [];\n        for (let i = 0; i < this.nodes.length; i++) {\n            if (this.nodes.length) {\n                this.nodes[i].clear();\n            }\n        }\n        this.nodes = [];\n    }\n}\n\n/**\n * Class representing a Rectangle\n * @typeParam CustomDataType - Type of the custom data property (optional, inferred automatically).\n *\n * @example Without custom data (JS/TS):\n * ```typescript\n * const rectangle = new Rectangle({\n *   x: 10,\n *   y: 20,\n *   width: 30,\n *   height: 40,\n * });\n * ```\n *\n * @example With custom data (JS/TS):\n * ```javascript\n * const rectangle = new Rectangle({\n *   x: 10,\n *   y: 20,\n *   width: 30,\n *   height: 40,\n *   data: {\n *     name: 'Jane',\n *     health: 100,\n *   },\n * });\n * ```\n *\n * @example With custom data (TS):\n * ```typescript\n * interface ObjectData {\n *   name: string\n *   health: number\n * }\n * const entity: ObjectData = {\n *   name: 'Jane',\n *   health: 100,\n * };\n *\n * // Typescript will infer the type of the data property\n * const rectangle1 = new Rectangle({\n *   x: 10,\n *   y: 20,\n *   width: 30,\n *   height: 40,\n *   data: entity,\n * });\n *\n * // You can also pass in a generic type for the data property\n * const rectangle2 = new Rectangle<ObjectData>({\n *   x: 10,\n *   y: 20,\n *   width: 30,\n *   height: 40,\n * });\n * rectangle2.data = entity;\n * ```\n *\n * @example With custom class extending Rectangle (implements {@link RectangleGeometry} (x, y, width, height)):\n * ```javascript\n * // extending inherits the qtIndex method\n * class Box extends Rectangle {\n *\n *   constructor(props) {\n *     // call super to set x, y, width, height (and data, if given)\n *     super(props);\n *     this.content = props.content;\n *   }\n * }\n *\n * const box = new Box({\n *   content: 'Gravity Boots',\n *   x: 10,\n *   y: 20,\n *   width: 30,\n *   height: 40,\n * });\n * ```\n *\n * @example With custom class and mapping {@link RectangleGeometry}:\n * ```javascript\n * // no need to extend if you don't implement RectangleGeometry\n * class Box {\n *\n *   constructor(content) {\n *     this.content = content;\n *     this.position = [10, 20];\n *     this.size = [30, 40];\n *   }\n *\n *   // add a qtIndex method to your class\n *   qtIndex(node) {\n *     // map your properties to RectangleGeometry\n *     return Rectangle.prototype.qtIndex.call({\n *       x: this.position[0],\n *       y: this.position[1],\n *       width: this.size[0],\n *       height: this.size[1],\n *     }, node);\n *   }\n * }\n *\n * const box = new Box('Gravity Boots');\n * ```\n *\n * @example With custom object that implements {@link RectangleGeometry}:\n * ```javascript\n * const player = {\n *   name: 'Jane',\n *   health: 100,\n *   x: 10,\n *   y: 20,\n *   width: 30,\n *   height: 30,\n *   qtIndex: Rectangle.prototype.qtIndex,\n * });\n * ```\n *\n * @example With custom object and mapping {@link RectangleGeometry}:\n * ```javascript\n * // Note: this is not recommended but possible.\n * // Using this technique, each object would have it's own qtIndex method.\n * // Rather add qtIndex to your prototype, e.g. by using classes like shown above.\n * const player = {\n *   name: 'Jane',\n *   health: 100,\n *   position: [10, 20],\n *   size: [30, 40],\n *   qtIndex: function(node) {\n *     return Rectangle.prototype.qtIndex.call({\n *       x: this.position[0],\n *       y: this.position[1],\n *       width: this.size[0],\n *       height: this.size[1],\n *     }, node);\n *   },\n * });\n * ```\n */\nclass Rectangle {\n    constructor(props) {\n        this.x = props.x;\n        this.y = props.y;\n        this.width = props.width;\n        this.height = props.height;\n        this.data = props.data;\n    }\n    /**\n     * Determine which quadrant this rectangle belongs to.\n     * @param node - Quadtree node to be checked\n     * @returns Array containing indexes of intersecting subnodes (0-3 = top-right, top-left, bottom-left, bottom-right)\n     */\n    qtIndex(node) {\n        const indexes = [], boundsCenterX = node.x + (node.width / 2), boundsCenterY = node.y + (node.height / 2);\n        const startIsNorth = this.y < boundsCenterY, startIsWest = this.x < boundsCenterX, endIsEast = this.x + this.width > boundsCenterX, endIsSouth = this.y + this.height > boundsCenterY;\n        //top-right quad\n        if (startIsNorth && endIsEast) {\n            indexes.push(0);\n        }\n        //top-left quad\n        if (startIsWest && startIsNorth) {\n            indexes.push(1);\n        }\n        //bottom-left quad\n        if (startIsWest && endIsSouth) {\n            indexes.push(2);\n        }\n        //bottom-right quad\n        if (endIsEast && endIsSouth) {\n            indexes.push(3);\n        }\n        return indexes;\n    }\n}\n\n/**\n * Class representing a Circle.\n * @typeParam CustomDataType - Type of the custom data property (optional, inferred automatically).\n *\n * @example Without custom data (JS/TS):\n * ```typescript\n * const circle = new Circle({\n *   x: 100,\n *   y: 100,\n *   r: 32,\n * });\n * ```\n *\n * @example With custom data (JS/TS):\n * ```javascript\n * const circle = new Circle({\n *   x: 100,\n *   y: 100,\n *   r: 32,\n *   data: {\n *     name: 'Jane',\n *     health: 100,\n *   },\n * });\n * ```\n *\n * @example With custom data (TS):\n * ```typescript\n * interface ObjectData {\n *   name: string\n *   health: number\n * }\n * const entity: ObjectData = {\n *   name: 'Jane',\n *   health: 100,\n * };\n *\n * // Typescript will infer the type of the data property\n * const circle1 = new Circle({\n *   x: 100,\n *   y: 100,\n *   r: 32,\n *   data: entity,\n * });\n *\n * // You can also pass in a generic type for the data property\n * const circle2 = new Circle<ObjectData>({\n *   x: 100,\n *   y: 100,\n *   r: 32,\n * });\n * circle2.data = entity;\n * ```\n *\n * @example With custom class extending Circle (implements {@link CircleGeometry} (x, y, r)):\n * ```javascript\n * // extending inherits the qtIndex method\n * class Bomb extends Circle {\n *\n *   constructor(props) {\n *     // call super to set x, y, r (and data, if given)\n *     super(props);\n *     this.countdown = props.countdown;\n *   }\n * }\n *\n * const bomb = new Bomb({\n *   countdown: 5,\n *   x: 10,\n *   y: 20,\n *   r: 30,\n * });\n * ```\n *\n * @example With custom class and mapping {@link CircleGeometry}:\n * ```javascript\n * // no need to extend if you don't implement CircleGeometry\n * class Bomb {\n *\n *   constructor(countdown) {\n *     this.countdown = countdown;\n *     this.position = [10, 20];\n *     this.radius = 30;\n *   }\n *\n *   // add a qtIndex method to your class\n *   qtIndex(node) {\n *     // map your properties to CircleGeometry\n *     return Circle.prototype.qtIndex.call({\n *       x: this.position[0],\n *       y: this.position[1],\n *       r: this.radius,\n *     }, node);\n *   }\n * }\n *\n * const bomb = new Bomb(5);\n * ```\n *\n * @example With custom object that implements {@link CircleGeometry}:\n * ```javascript\n * const player = {\n *   name: 'Jane',\n *   health: 100,\n *   x: 10,\n *   y: 20,\n *   r: 30,\n *   qtIndex: Circle.prototype.qtIndex,\n * });\n * ```\n *\n * @example With custom object and mapping {@link CircleGeometry}:\n * ```javascript\n * // Note: this is not recommended but possible.\n * // Using this technique, each object would have it's own qtIndex method.\n * // Rather add qtIndex to your prototype, e.g. by using classes like shown above.\n * const player = {\n *   name: 'Jane',\n *   health: 100,\n *   position: [10, 20],\n *   radius: 30,\n *   qtIndex: function(node) {\n *     return Circle.prototype.qtIndex.call({\n *       x: this.position[0],\n *       y: this.position[1],\n *       r: this.radius,\n *     }, node);\n *   },\n * });\n * ```\n */\nclass Circle {\n    /**\n     * Circle Constructor\n     * @param props - Circle properties\n     * @typeParam CustomDataType - Type of the custom data property (optional, inferred automatically).\n     */\n    constructor(props) {\n        this.x = props.x;\n        this.y = props.y;\n        this.r = props.r;\n        this.data = props.data;\n    }\n    /**\n     * Determine which quadrant this circle belongs to.\n     * @param node - Quadtree node to be checked\n     * @returns Array containing indexes of intersecting subnodes (0-3 = top-right, top-left, bottom-left, bottom-right)\n     */\n    qtIndex(node) {\n        const indexes = [], w2 = node.width / 2, h2 = node.height / 2, x2 = node.x + w2, y2 = node.y + h2;\n        //an array of node origins where the array index equals the node index\n        const nodes = [\n            [x2, node.y],\n            [node.x, node.y],\n            [node.x, y2],\n            [x2, y2],\n        ];\n        //test all nodes for circle intersections\n        for (let i = 0; i < nodes.length; i++) {\n            if (Circle.intersectRect(this.x, this.y, this.r, nodes[i][0], nodes[i][1], nodes[i][0] + w2, nodes[i][1] + h2)) {\n                indexes.push(i);\n            }\n        }\n        return indexes;\n    }\n    /**\n     * Check if a circle intersects an axis aligned rectangle.\n     * @beta\n     * @see https://yal.cc/rectangle-circle-intersection-test/\n     * @param x - circle center X\n     * @param y - circle center Y\n     * @param r - circle radius\n     * @param minX - rectangle start X\n     * @param minY - rectangle start Y\n     * @param maxX - rectangle end X\n     * @param maxY - rectangle end Y\n     * @returns true if circle intersects rectangle\n     *\n     * @example Check if a circle intersects a rectangle:\n     * ```javascript\n     * const circ = { x: 10, y: 20, r: 30 };\n     * const rect = { x: 40, y: 50, width: 60, height: 70 };\n     * const intersect = Circle.intersectRect(\n     *   circ.x,\n     *   circ.y,\n     *   circ.r,\n     *   rect.x,\n     *   rect.y,\n     *   rect.x + rect.width,\n     *   rect.y + rect.height,\n     * );\n     * console.log(circle, rect, 'intersect?', intersect);\n     * ```\n     */\n    static intersectRect(x, y, r, minX, minY, maxX, maxY) {\n        const deltaX = x - Math.max(minX, Math.min(x, maxX));\n        const deltaY = y - Math.max(minY, Math.min(y, maxY));\n        return (deltaX * deltaX + deltaY * deltaY) < (r * r);\n    }\n}\n\n/**\n * Class representing a Line\n * @typeParam CustomDataType - Type of the custom data property (optional, inferred automatically).\n *\n * @example Without custom data (JS/TS):\n * ```typescript\n * const line = new Line({\n *   x1: 10,\n *   y1: 20,\n *   x2: 30,\n *   y2: 40,\n * });\n * ```\n *\n * @example With custom data (JS/TS):\n * ```javascript\n * const line = new Line({\n *   x1: 10,\n *   y1: 20,\n *   x2: 30,\n *   y2: 40,\n *   data: {\n *     name: 'Jane',\n *     health: 100,\n *   },\n * });\n * ```\n *\n * @example With custom data (TS):\n * ```typescript\n * interface ObjectData {\n *   name: string\n *   health: number\n * }\n * const entity: ObjectData = {\n *   name: 'Jane',\n *   health: 100,\n * };\n *\n * // Typescript will infer the type of the data property\n * const line1 = new Line({\n *   x1: 10,\n *   y1: 20,\n *   x2: 30,\n *   y2: 40,\n *   data: entity,\n * });\n *\n * // You can also pass in a generic type for the data property\n * const line2 = new Line<ObjectData>({\n *   x1: 10,\n *   y1: 20,\n *   x2: 30,\n *   y2: 40,\n * });\n * line2.data = entity;\n * ```\n *\n * @example With custom class extending Line (implements {@link LineGeometry} (x1, y1, x2, y2)):\n * ```javascript\n * // extending inherits the qtIndex method\n * class Laser extends Line {\n *\n *   constructor(props) {\n *     // call super to set x1, y1, x2, y2 (and data, if given)\n *     super(props);\n *     this.color = props.color;\n *   }\n * }\n *\n * const laser = new Laser({\n *   color: 'green',\n *   x1: 10,\n *   y1: 20,\n *   x2: 30,\n *   y2: 40,\n * });\n * ```\n *\n * @example With custom class and mapping {@link LineGeometry}:\n * ```javascript\n * // no need to extend if you don't implement LineGeometry\n * class Laser {\n *\n *   constructor(color) {\n *     this.color = color;\n *     this.start = [10, 20];\n *     this.end = [30, 40];\n *   }\n *\n *   // add a qtIndex method to your class\n *   qtIndex(node) {\n *     // map your properties to LineGeometry\n *     return Line.prototype.qtIndex.call({\n *       x1: this.start[0],\n *       y1: this.start[1],\n *       x2: this.end[0],\n *       y2: this.end[1],\n *     }, node);\n *   }\n * }\n *\n * const laser = new Laser('green');\n * ```\n *\n * @example With custom object that implements {@link LineGeometry}:\n * ```javascript\n * const player = {\n *   name: 'Jane',\n *   health: 100,\n *   x1: 10,\n *   y1: 20,\n *   x2: 30,\n *   y2: 40,\n *   qtIndex: Line.prototype.qtIndex,\n * });\n * ```\n *\n * @example With custom object and mapping {@link LineGeometry}:\n * ```javascript\n * // Note: this is not recommended but possible.\n * // Using this technique, each object would have it's own qtIndex method.\n * // Rather add qtIndex to your prototype, e.g. by using classes like shown above.\n * const player = {\n *   name: 'Jane',\n *   health: 100,\n *   start: [10, 20],\n *   end: [30, 40],\n *   qtIndex: function(node) {\n *     return Line.prototype.qtIndex.call({\n *       x1: this.start[0],\n *       y1: this.start[1],\n *       x2: this.end[0],\n *       y2: this.end[1],\n *     }, node);\n *   },\n * });\n * ```\n */\nclass Line {\n    /**\n     * Line Constructor\n     * @param props - Line properties\n     * @typeParam CustomDataType - Type of the custom data property (optional, inferred automatically).\n     */\n    constructor(props) {\n        this.x1 = props.x1;\n        this.y1 = props.y1;\n        this.x2 = props.x2;\n        this.y2 = props.y2;\n        this.data = props.data;\n    }\n    /**\n     * Determine which quadrant this line belongs to.\n     * @beta\n     * @param node - Quadtree node to be checked\n     * @returns Array containing indexes of intersecting subnodes (0-3 = top-right, top-left, bottom-left, bottom-right)\n     */\n    qtIndex(node) {\n        const indexes = [], w2 = node.width / 2, h2 = node.height / 2, x2 = node.x + w2, y2 = node.y + h2;\n        //an array of node origins where the array index equals the node index\n        const nodes = [\n            [x2, node.y],\n            [node.x, node.y],\n            [node.x, y2],\n            [x2, y2],\n        ];\n        //test all nodes for line intersections\n        for (let i = 0; i < nodes.length; i++) {\n            if (Line.intersectRect(this.x1, this.y1, this.x2, this.y2, nodes[i][0], nodes[i][1], nodes[i][0] + w2, nodes[i][1] + h2)) {\n                indexes.push(i);\n            }\n        }\n        return indexes;\n    }\n    /**\n     * check if a line segment (the first 4 parameters) intersects an axis aligned rectangle (the last 4 parameters)\n     * @beta\n     *\n     * @remarks\n     * There is a bug where detection fails on corner intersections\n     * when the line enters/exits the node exactly at corners (45°)\n     * {@link https://stackoverflow.com/a/18292964/860205}\n     *\n     * @param x1 - line start X\n     * @param y1 - line start Y\n     * @param x2 - line end X\n     * @param y2 - line end Y\n     * @param minX - rectangle start X\n     * @param minY - rectangle start Y\n     * @param maxX - rectangle end X\n     * @param maxY - rectangle end Y\n     * @returns true if the line segment intersects the axis aligned rectangle\n     */\n    static intersectRect(x1, y1, x2, y2, minX, minY, maxX, maxY) {\n        // Completely outside\n        if ((x1 <= minX && x2 <= minX) || (y1 <= minY && y2 <= minY) || (x1 >= maxX && x2 >= maxX) || (y1 >= maxY && y2 >= maxY))\n            return false;\n        // Single point inside\n        if ((x1 >= minX && x1 <= maxX && y1 >= minY && y1 <= maxY) || (x2 >= minX && x2 <= maxX && y2 >= minY && y2 <= maxY))\n            return true;\n        const m = (y2 - y1) / (x2 - x1);\n        let y = m * (minX - x1) + y1;\n        if (y > minY && y < maxY)\n            return true;\n        y = m * (maxX - x1) + y1;\n        if (y > minY && y < maxY)\n            return true;\n        let x = (minY - y1) / m + x1;\n        if (x > minX && x < maxX)\n            return true;\n        x = (maxY - y1) / m + x1;\n        if (x > minX && x < maxX)\n            return true;\n        return false;\n    }\n}\n\nexport { Circle, Line, Quadtree, Rectangle };\n","import {Rectangle} from \"@timohausmann/quadtree-ts\";\n\nexport class GameMap {\n    width;\n    height;\n\n    constructor(width, height) {\n        this.width = width;\n        this.height = height;\n    }\n\n    drawName(context, player) {\n        context.moveTo(player.x, player.y);\n        context.font = '20px Arial';\n        context.fillStyle = 'black';\n        context.fillText(`${player.name} \\nx: ${player.x}\\ny: ${player.y}`, player.x, player.y);\n    }\n\n    drawDecor(context, playerPosition, width, height) {\n        const { x, y} = playerPosition;\n        const yLimit = Math.min(y + height, this.height);\n        const xLimit = Math.min(x + width, this.width);\n        const xStart = Math.max(x - width, 0);\n        const yStart = Math.max(y - height, 0);\n        for (let i = 0; i < yLimit; i+=100) {\n            if (i < y - height) continue;\n            context.beginPath();\n            context.moveTo(xStart, i);\n            context.lineTo(xLimit, i);\n            context.stroke();\n        }\n        for (let i = 0; i <xLimit; i+=100) {\n            if (i < x - width) continue;\n            context.beginPath();\n            context.moveTo(i, yStart);\n            context.lineTo(i, yLimit);\n            context.stroke();\n        }\n    }\n\n    drawFood(context, foodQuadTree, player, viewLength, viewHeight) {\n        const foods = foodQuadTree.retrieve(new Rectangle({\n            x: player.x - viewLength,\n            y: player.y - viewHeight,\n            width: viewLength * 2,\n            height: viewHeight * 2\n        }));\n        foods.forEach(food => {\n                context.beginPath();\n                context.arc(food.x, food.y, food.size, 0, 2 * Math.PI);\n                context.fillStyle = 'blue';\n                context.fill();\n                context.strokeStyle = 'black';\n                context.stroke();\n        });\n    }\n\n    drawPlayer(context, player, mainPlayer, viewLength, viewHeight) {\n        const minX = mainPlayer.x - viewLength;\n        const maxX = mainPlayer.x + viewLength;\n        const minY = mainPlayer.y - viewHeight;\n        const maxY = mainPlayer.y + viewHeight;\n\n        // Check if the player is visible based on their position and size\n        const playerIsXVisible = (player.x - player.size < maxX) && (player.x + player.size > minX);\n        const playerIsYVisible = (player.y - player.size < maxY) && (player.y + player.size > minY);\n\n        if (playerIsXVisible && playerIsYVisible) {\n\n\n            context.beginPath();\n            context.arc(player.x, player.y, player.size, 0, 2 * Math.PI);\n            context.fillStyle = 'red';\n            context.fill();\n            context.strokeStyle = 'green';\n            context.stroke();\n            context.beginPath();\n            // draw line from center of player to the direction\n            context.moveTo(player.x, player.y);\n            context.lineTo(player.x + player.xDirection * 10, player.y + player.yDirection * 10);\n            context.strokeStyle = 'black';\n            context.stroke();\n            return true;\n        }\n        return false;\n    }\n}","import {Circle} from \"@timohausmann/quadtree-ts\";\n\nexport class Food extends Circle{\n\tbonus;\n\tx;\n\ty;\n\n\n\tconstructor(bonus,  x,  y) {\n\t\tsuper({\n\t\t\tx: x,\n\t\t\ty: y,\n\t\t\tr: bonus\n\t\t});\n\t\tthis.bonus = bonus;\n\t\tthis.size = bonus;\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t}\n}","const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach((key) => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n","import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + (content || \"\"));\n    };\n    return fileReader.readAsDataURL(data);\n};\nfunction toArray(data) {\n    if (data instanceof Uint8Array) {\n        return data;\n    }\n    else if (data instanceof ArrayBuffer) {\n        return new Uint8Array(data);\n    }\n    else {\n        return new Uint8Array(data.buffer, data.byteOffset, data.byteLength);\n    }\n}\nlet TEXT_ENCODER;\nexport function encodePacketToBinary(packet, callback) {\n    if (withNativeBlob && packet.data instanceof Blob) {\n        return packet.data.arrayBuffer().then(toArray).then(callback);\n    }\n    else if (withNativeArrayBuffer &&\n        (packet.data instanceof ArrayBuffer || isView(packet.data))) {\n        return callback(toArray(packet.data));\n    }\n    encodePacket(packet, false, (encoded) => {\n        if (!TEXT_ENCODER) {\n            TEXT_ENCODER = new TextEncoder();\n        }\n        callback(TEXT_ENCODER.encode(encoded));\n    });\n}\nexport { encodePacket };\n","// imported from https://github.com/socketio/base64-arraybuffer\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nconst lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (let i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nexport const encode = (arraybuffer) => {\n    let bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nexport const decode = (base64) => {\n    let bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    const arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n","import { ERROR_PACKET, PACKET_TYPES_REVERSE, } from \"./commons.js\";\nimport { decode } from \"./contrib/base64-arraybuffer.js\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nexport const decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType),\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType),\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1),\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type],\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            if (data instanceof Blob) {\n                // from WebSocket + binaryType \"blob\"\n                return data;\n            }\n            else {\n                // from HTTP long-polling or WebTransport\n                return new Blob([data]);\n            }\n        case \"arraybuffer\":\n        default:\n            if (data instanceof ArrayBuffer) {\n                // from HTTP long-polling (base64) or WebSocket + binaryType \"arraybuffer\"\n                return data;\n            }\n            else {\n                // from WebTransport (Uint8Array)\n                return data.buffer;\n            }\n    }\n};\n","import { encodePacket, encodePacketToBinary } from \"./encodePacket.js\";\nimport { decodePacket } from \"./decodePacket.js\";\nimport { ERROR_PACKET, } from \"./commons.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, (encodedPacket) => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nexport function createPacketEncoderStream() {\n    return new TransformStream({\n        transform(packet, controller) {\n            encodePacketToBinary(packet, (encodedPacket) => {\n                const payloadLength = encodedPacket.length;\n                let header;\n                // inspired by the WebSocket format: https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API/Writing_WebSocket_servers#decoding_payload_length\n                if (payloadLength < 126) {\n                    header = new Uint8Array(1);\n                    new DataView(header.buffer).setUint8(0, payloadLength);\n                }\n                else if (payloadLength < 65536) {\n                    header = new Uint8Array(3);\n                    const view = new DataView(header.buffer);\n                    view.setUint8(0, 126);\n                    view.setUint16(1, payloadLength);\n                }\n                else {\n                    header = new Uint8Array(9);\n                    const view = new DataView(header.buffer);\n                    view.setUint8(0, 127);\n                    view.setBigUint64(1, BigInt(payloadLength));\n                }\n                // first bit indicates whether the payload is plain text (0) or binary (1)\n                if (packet.data && typeof packet.data !== \"string\") {\n                    header[0] |= 0x80;\n                }\n                controller.enqueue(header);\n                controller.enqueue(encodedPacket);\n            });\n        },\n    });\n}\nlet TEXT_DECODER;\nfunction totalLength(chunks) {\n    return chunks.reduce((acc, chunk) => acc + chunk.length, 0);\n}\nfunction concatChunks(chunks, size) {\n    if (chunks[0].length === size) {\n        return chunks.shift();\n    }\n    const buffer = new Uint8Array(size);\n    let j = 0;\n    for (let i = 0; i < size; i++) {\n        buffer[i] = chunks[0][j++];\n        if (j === chunks[0].length) {\n            chunks.shift();\n            j = 0;\n        }\n    }\n    if (chunks.length && j < chunks[0].length) {\n        chunks[0] = chunks[0].slice(j);\n    }\n    return buffer;\n}\nexport function createPacketDecoderStream(maxPayload, binaryType) {\n    if (!TEXT_DECODER) {\n        TEXT_DECODER = new TextDecoder();\n    }\n    const chunks = [];\n    let state = 0 /* State.READ_HEADER */;\n    let expectedLength = -1;\n    let isBinary = false;\n    return new TransformStream({\n        transform(chunk, controller) {\n            chunks.push(chunk);\n            while (true) {\n                if (state === 0 /* State.READ_HEADER */) {\n                    if (totalLength(chunks) < 1) {\n                        break;\n                    }\n                    const header = concatChunks(chunks, 1);\n                    isBinary = (header[0] & 0x80) === 0x80;\n                    expectedLength = header[0] & 0x7f;\n                    if (expectedLength < 126) {\n                        state = 3 /* State.READ_PAYLOAD */;\n                    }\n                    else if (expectedLength === 126) {\n                        state = 1 /* State.READ_EXTENDED_LENGTH_16 */;\n                    }\n                    else {\n                        state = 2 /* State.READ_EXTENDED_LENGTH_64 */;\n                    }\n                }\n                else if (state === 1 /* State.READ_EXTENDED_LENGTH_16 */) {\n                    if (totalLength(chunks) < 2) {\n                        break;\n                    }\n                    const headerArray = concatChunks(chunks, 2);\n                    expectedLength = new DataView(headerArray.buffer, headerArray.byteOffset, headerArray.length).getUint16(0);\n                    state = 3 /* State.READ_PAYLOAD */;\n                }\n                else if (state === 2 /* State.READ_EXTENDED_LENGTH_64 */) {\n                    if (totalLength(chunks) < 8) {\n                        break;\n                    }\n                    const headerArray = concatChunks(chunks, 8);\n                    const view = new DataView(headerArray.buffer, headerArray.byteOffset, headerArray.length);\n                    const n = view.getUint32(0);\n                    if (n > Math.pow(2, 53 - 32) - 1) {\n                        // the maximum safe integer in JavaScript is 2^53 - 1\n                        controller.enqueue(ERROR_PACKET);\n                        break;\n                    }\n                    expectedLength = n * Math.pow(2, 32) + view.getUint32(4);\n                    state = 3 /* State.READ_PAYLOAD */;\n                }\n                else {\n                    if (totalLength(chunks) < expectedLength) {\n                        break;\n                    }\n                    const data = concatChunks(chunks, expectedLength);\n                    controller.enqueue(decodePacket(isBinary ? data : TEXT_DECODER.decode(data), binaryType));\n                    state = 0 /* State.READ_HEADER */;\n                }\n                if (expectedLength === 0 || expectedLength > maxPayload) {\n                    controller.enqueue(ERROR_PACKET);\n                    break;\n                }\n            }\n        },\n    });\n}\nexport const protocol = 4;\nexport { encodePacket, encodePayload, decodePacket, decodePayload, };\n","/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nexport function Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","export const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return (cb) => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const globalThisShim = (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\nexport const defaultBinaryType = \"arraybuffer\";\nexport function createCookieJar() { }\n","import { globalThisShim as globalThis } from \"./globals.node.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = globalThis.setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = globalThis.clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = globalThis.setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = globalThis.clearTimeout.bind(globalThis);\n    }\n}\n// base64 encoded buffers are about 33% bigger (https://en.wikipedia.org/wiki/Base64)\nconst BASE64_OVERHEAD = 1.33;\n// we could also have used `new Blob([obj]).size`, but it isn't supported in IE9\nexport function byteLength(obj) {\n    if (typeof obj === \"string\") {\n        return utf8Length(obj);\n    }\n    // arraybuffer or blob\n    return Math.ceil((obj.byteLength || obj.size) * BASE64_OVERHEAD);\n}\nfunction utf8Length(str) {\n    let c = 0, length = 0;\n    for (let i = 0, l = str.length; i < l; i++) {\n        c = str.charCodeAt(i);\n        if (c < 0x80) {\n            length += 1;\n        }\n        else if (c < 0x800) {\n            length += 2;\n        }\n        else if (c < 0xd800 || c >= 0xe000) {\n            length += 3;\n        }\n        else {\n            i++;\n            length += 4;\n        }\n    }\n    return length;\n}\n/**\n * Generates a random 8-characters string.\n */\nexport function randomString() {\n    return (Date.now().toString(36).substring(3) +\n        Math.random().toString(36).substring(2, 5));\n}\n","import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nimport { encode } from \"./contrib/parseqs.js\";\nexport class TransportError extends Error {\n    constructor(reason, description, context) {\n        super(reason);\n        this.description = description;\n        this.context = context;\n        this.type = \"TransportError\";\n    }\n}\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} opts - options\n     * @protected\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.socket = opts.socket;\n        this.supportsBinary = !opts.forceBase64;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} reason\n     * @param description\n     * @param context - the error context\n     * @return {Transport} for chaining\n     * @protected\n     */\n    onError(reason, description, context) {\n        super.emitReserved(\"error\", new TransportError(reason, description, context));\n        return this;\n    }\n    /**\n     * Opens the transport.\n     */\n    open() {\n        this.readyState = \"opening\";\n        this.doOpen();\n        return this;\n    }\n    /**\n     * Closes the transport.\n     */\n    close() {\n        if (this.readyState === \"opening\" || this.readyState === \"open\") {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     */\n    send(packets) {\n        if (this.readyState === \"open\") {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emitReserved(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @protected\n     */\n    onPacket(packet) {\n        super.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @protected\n     */\n    onClose(details) {\n        this.readyState = \"closed\";\n        super.emitReserved(\"close\", details);\n    }\n    /**\n     * Pauses the transport, in order not to lose packets during an upgrade.\n     *\n     * @param onPause\n     */\n    pause(onPause) { }\n    createUri(schema, query = {}) {\n        return (schema +\n            \"://\" +\n            this._hostname() +\n            this._port() +\n            this.opts.path +\n            this._query(query));\n    }\n    _hostname() {\n        const hostname = this.opts.hostname;\n        return hostname.indexOf(\":\") === -1 ? hostname : \"[\" + hostname + \"]\";\n    }\n    _port() {\n        if (this.opts.port &&\n            ((this.opts.secure && Number(this.opts.port !== 443)) ||\n                (!this.opts.secure && Number(this.opts.port) !== 80))) {\n            return \":\" + this.opts.port;\n        }\n        else {\n            return \"\";\n        }\n    }\n    _query(query) {\n        const encodedQuery = encode(query);\n        return encodedQuery.length ? \"?\" + encodedQuery : \"\";\n    }\n}\n","// imported from https://github.com/galkn/querystring\n/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\nexport function encode(obj) {\n    let str = '';\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            if (str.length)\n                str += '&';\n            str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n        }\n    }\n    return str;\n}\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\nexport function decode(qs) {\n    let qry = {};\n    let pairs = qs.split('&');\n    for (let i = 0, l = pairs.length; i < l; i++) {\n        let pair = pairs[i].split('=');\n        qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n    }\n    return qry;\n}\n","import { Transport } from \"../transport.js\";\nimport { randomString } from \"../util.js\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nexport class Polling extends Transport {\n    constructor() {\n        super(...arguments);\n        this._polling = false;\n    }\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @protected\n     */\n    doOpen() {\n        this._poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} onPause - callback upon buffers are flushed and transport is paused\n     * @package\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this._polling || !this.writable) {\n            let total = 0;\n            if (this._polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @private\n     */\n    _poll() {\n        this._polling = true;\n        this.doPoll();\n        this.emitReserved(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @protected\n     */\n    onData(data) {\n        const callback = (packet) => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose({ description: \"transport closed by the server\" });\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this._polling = false;\n            this.emitReserved(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this._poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @protected\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} packets - data packets\n     * @protected\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, (data) => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emitReserved(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        const query = this.query || {};\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = randomString();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        return this.createUri(schema, query);\n    }\n}\n","// imported from https://github.com/component/has-cors\nlet value = false;\ntry {\n    value = typeof XMLHttpRequest !== 'undefined' &&\n        'withCredentials' in new XMLHttpRequest();\n}\ncatch (err) {\n    // if XMLHttp support is disabled in IE then it will throw\n    // when trying to create\n}\nexport const hasCORS = value;\n","import { Polling } from \"./polling.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { globalThisShim as globalThis } from \"../globals.node.js\";\nimport { hasCORS } from \"../contrib/has-cors.js\";\nfunction empty() { }\nexport class BaseXHR extends Polling {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @package\n     */\n    constructor(opts) {\n        super(opts);\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n        }\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data,\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr post error\", xhrStatus, context);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr poll error\", xhrStatus, context);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @package\n     */\n    constructor(createRequest, uri, opts) {\n        super();\n        this.createRequest = createRequest;\n        installTimerFunctions(this, opts);\n        this._opts = opts;\n        this._method = opts.method || \"GET\";\n        this._uri = uri;\n        this._data = undefined !== opts.data ? opts.data : null;\n        this._create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @private\n     */\n    _create() {\n        var _a;\n        const opts = pick(this._opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this._opts.xd;\n        const xhr = (this._xhr = this.createRequest(opts));\n        try {\n            xhr.open(this._method, this._uri, true);\n            try {\n                if (this._opts.extraHeaders) {\n                    // @ts-ignore\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this._opts.extraHeaders) {\n                        if (this._opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this._opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this._method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            (_a = this._opts.cookieJar) === null || _a === void 0 ? void 0 : _a.addCookies(xhr);\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this._opts.withCredentials;\n            }\n            if (this._opts.requestTimeout) {\n                xhr.timeout = this._opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                var _a;\n                if (xhr.readyState === 3) {\n                    (_a = this._opts.cookieJar) === null || _a === void 0 ? void 0 : _a.parseCookies(\n                    // @ts-ignore\n                    xhr.getResponseHeader(\"set-cookie\"));\n                }\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this._onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this._onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this._data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this._onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this._index = Request.requestsCount++;\n            Request.requests[this._index] = this;\n        }\n    }\n    /**\n     * Called upon error.\n     *\n     * @private\n     */\n    _onError(err) {\n        this.emitReserved(\"error\", err, this._xhr);\n        this._cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @private\n     */\n    _cleanup(fromError) {\n        if (\"undefined\" === typeof this._xhr || null === this._xhr) {\n            return;\n        }\n        this._xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this._xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this._index];\n        }\n        this._xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @private\n     */\n    _onLoad() {\n        const data = this._xhr.responseText;\n        if (data !== null) {\n            this.emitReserved(\"data\", data);\n            this.emitReserved(\"success\");\n            this._cleanup();\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @package\n     */\n    abort() {\n        this._cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\nconst hasXHR2 = (function () {\n    const xhr = newRequest({\n        xdomain: false,\n    });\n    return xhr && xhr.responseType !== null;\n})();\n/**\n * HTTP long-polling based on the built-in `XMLHttpRequest` object.\n *\n * Usage: browser\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest\n */\nexport class XHR extends BaseXHR {\n    constructor(opts) {\n        super(opts);\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n    }\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd }, this.opts);\n        return new Request(newRequest, this.uri(), opts);\n    }\n}\nfunction newRequest(opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\n","import { Transport } from \"../transport.js\";\nimport { pick, randomString } from \"../util.js\";\nimport { encodePacket } from \"engine.io-parser\";\nimport { globalThisShim as globalThis, nextTick } from \"../globals.node.js\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class BaseWS extends Transport {\n    get name() {\n        return \"websocket\";\n    }\n    doOpen() {\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws = this.createSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = (closeEvent) => this.onClose({\n            description: \"websocket connection closed\",\n            context: closeEvent,\n        });\n        this.ws.onmessage = (ev) => this.onData(ev.data);\n        this.ws.onerror = (e) => this.onError(\"websocket error\", e);\n    }\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, (data) => {\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    this.doWrite(packet, data);\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.onerror = () => { };\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        const query = this.query || {};\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = randomString();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        return this.createUri(schema, query);\n    }\n}\nconst WebSocketCtor = globalThis.WebSocket || globalThis.MozWebSocket;\n/**\n * WebSocket transport based on the built-in `WebSocket` object.\n *\n * Usage: browser, Node.js (since v21), Deno, Bun\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket\n * @see https://caniuse.com/mdn-api_websocket\n * @see https://nodejs.org/api/globals.html#websocket\n */\nexport class WS extends BaseWS {\n    createSocket(uri, protocols, opts) {\n        return !isReactNative\n            ? protocols\n                ? new WebSocketCtor(uri, protocols)\n                : new WebSocketCtor(uri)\n            : new WebSocketCtor(uri, protocols, opts);\n    }\n    doWrite(_packet, data) {\n        this.ws.send(data);\n    }\n}\n","import { XHR } from \"./polling-xhr.node.js\";\nimport { WS } from \"./websocket.node.js\";\nimport { WT } from \"./webtransport.js\";\nexport const transports = {\n    websocket: WS,\n    webtransport: WT,\n    polling: XHR,\n};\n","import { Transport } from \"../transport.js\";\nimport { nextTick } from \"../globals.node.js\";\nimport { createPacketDecoderStream, createPacketEncoderStream, } from \"engine.io-parser\";\n/**\n * WebTransport transport based on the built-in `WebTransport` object.\n *\n * Usage: browser, Node.js (with the `@fails-components/webtransport` package)\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/WebTransport\n * @see https://caniuse.com/webtransport\n */\nexport class WT extends Transport {\n    get name() {\n        return \"webtransport\";\n    }\n    doOpen() {\n        try {\n            // @ts-ignore\n            this._transport = new WebTransport(this.createUri(\"https\"), this.opts.transportOptions[this.name]);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this._transport.closed\n            .then(() => {\n            this.onClose();\n        })\n            .catch((err) => {\n            this.onError(\"webtransport error\", err);\n        });\n        // note: we could have used async/await, but that would require some additional polyfills\n        this._transport.ready.then(() => {\n            this._transport.createBidirectionalStream().then((stream) => {\n                const decoderStream = createPacketDecoderStream(Number.MAX_SAFE_INTEGER, this.socket.binaryType);\n                const reader = stream.readable.pipeThrough(decoderStream).getReader();\n                const encoderStream = createPacketEncoderStream();\n                encoderStream.readable.pipeTo(stream.writable);\n                this._writer = encoderStream.writable.getWriter();\n                const read = () => {\n                    reader\n                        .read()\n                        .then(({ done, value }) => {\n                        if (done) {\n                            return;\n                        }\n                        this.onPacket(value);\n                        read();\n                    })\n                        .catch((err) => {\n                    });\n                };\n                read();\n                const packet = { type: \"open\" };\n                if (this.query.sid) {\n                    packet.data = `{\"sid\":\"${this.query.sid}\"}`;\n                }\n                this._writer.write(packet).then(() => this.onOpen());\n            });\n        });\n    }\n    write(packets) {\n        this.writable = false;\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            this._writer.write(packet).then(() => {\n                if (lastPacket) {\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        var _a;\n        (_a = this._transport) === null || _a === void 0 ? void 0 : _a.close();\n    }\n}\n","// imported from https://github.com/galkn/parseuri\n/**\n * Parses a URI\n *\n * Note: we could also have used the built-in URL object, but it isn't supported on all platforms.\n *\n * See:\n * - https://developer.mozilla.org/en-US/docs/Web/API/URL\n * - https://caniuse.com/url\n * - https://www.rfc-editor.org/rfc/rfc3986#appendix-B\n *\n * History of the parse() method:\n * - first commit: https://github.com/socketio/socket.io-client/commit/4ee1d5d94b3906a9c052b459f1a818b15f38f91c\n * - export into its own module: https://github.com/socketio/engine.io-client/commit/de2c561e4564efeb78f1bdb1ba39ef81b2822cb3\n * - reimport: https://github.com/socketio/engine.io-client/commit/df32277c3f6d622eec5ed09f493cae3f3391d242\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\nconst re = /^(?:(?![^:@\\/?#]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@\\/?#]*)(?::([^:@\\/?#]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nconst parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\nexport function parse(str) {\n    if (str.length > 8000) {\n        throw \"URI too long\";\n    }\n    const src = str, b = str.indexOf('['), e = str.indexOf(']');\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n    let m = re.exec(str || ''), uri = {}, i = 14;\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n    return uri;\n}\nfunction pathNames(obj, path) {\n    const regx = /\\/{2,9}/g, names = path.replace(regx, \"/\").split(\"/\");\n    if (path.slice(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.slice(-1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n    return names;\n}\nfunction queryKey(uri, query) {\n    const data = {};\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n    return data;\n}\n","import { transports as DEFAULT_TRANSPORTS } from \"./transports/index.js\";\nimport { installTimerFunctions, byteLength } from \"./util.js\";\nimport { decode } from \"./contrib/parseqs.js\";\nimport { parse } from \"./contrib/parseuri.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nimport { createCookieJar, defaultBinaryType, nextTick, } from \"./globals.node.js\";\nconst withEventListeners = typeof addEventListener === \"function\" &&\n    typeof removeEventListener === \"function\";\nconst OFFLINE_EVENT_LISTENERS = [];\nif (withEventListeners) {\n    // within a ServiceWorker, any event handler for the 'offline' event must be added on the initial evaluation of the\n    // script, so we create one single event listener here which will forward the event to the socket instances\n    addEventListener(\"offline\", () => {\n        OFFLINE_EVENT_LISTENERS.forEach((listener) => listener());\n    }, false);\n}\n/**\n * This class provides a WebSocket-like interface to connect to an Engine.IO server. The connection will be established\n * with one of the available low-level transports, like HTTP long-polling, WebSocket or WebTransport.\n *\n * This class comes without upgrade mechanism, which means that it will keep the first low-level transport that\n * successfully establishes the connection.\n *\n * In order to allow tree-shaking, there are no transports included, that's why the `transports` option is mandatory.\n *\n * @example\n * import { SocketWithoutUpgrade, WebSocket } from \"engine.io-client\";\n *\n * const socket = new SocketWithoutUpgrade({\n *   transports: [WebSocket]\n * });\n *\n * socket.on(\"open\", () => {\n *   socket.send(\"hello\");\n * });\n *\n * @see SocketWithUpgrade\n * @see Socket\n */\nexport class SocketWithoutUpgrade extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri - uri or options\n     * @param {Object} opts - options\n     */\n    constructor(uri, opts) {\n        super();\n        this.binaryType = defaultBinaryType;\n        this.writeBuffer = [];\n        this._prevBufferLen = 0;\n        this._pingInterval = -1;\n        this._pingTimeout = -1;\n        this._maxPayload = -1;\n        /**\n         * The expiration timestamp of the {@link _pingTimeoutTimer} object is tracked, in case the timer is throttled and the\n         * callback is not fired on time. This can happen for example when a laptop is suspended or when a phone is locked.\n         */\n        this._pingTimeoutTime = Infinity;\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            const parsedUri = parse(uri);\n            opts.hostname = parsedUri.host;\n            opts.secure =\n                parsedUri.protocol === \"https\" || parsedUri.protocol === \"wss\";\n            opts.port = parsedUri.port;\n            if (parsedUri.query)\n                opts.query = parsedUri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parse(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = [];\n        this._transportsByName = {};\n        opts.transports.forEach((t) => {\n            const transportName = t.prototype.name;\n            this.transports.push(transportName);\n            this._transportsByName[transportName] = t;\n        });\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            addTrailingSlash: true,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024,\n            },\n            transportOptions: {},\n            closeOnBeforeunload: false,\n        }, opts);\n        this.opts.path =\n            this.opts.path.replace(/\\/$/, \"\") +\n                (this.opts.addTrailingSlash ? \"/\" : \"\");\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = decode(this.opts.query);\n        }\n        if (withEventListeners) {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                this._beforeunloadEventListener = () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                };\n                addEventListener(\"beforeunload\", this._beforeunloadEventListener, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this._offlineEventListener = () => {\n                    this._onClose(\"transport close\", {\n                        description: \"network connection lost\",\n                    });\n                };\n                OFFLINE_EVENT_LISTENERS.push(this._offlineEventListener);\n            }\n        }\n        if (this.opts.withCredentials) {\n            this._cookieJar = createCookieJar();\n        }\n        this._open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} name - transport name\n     * @return {Transport}\n     * @private\n     */\n    createTransport(name) {\n        const query = Object.assign({}, this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port,\n        }, this.opts.transportOptions[name]);\n        return new this._transportsByName[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @private\n     */\n    _open() {\n        if (this.transports.length === 0) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        const transportName = this.opts.rememberUpgrade &&\n            SocketWithoutUpgrade.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1\n            ? \"websocket\"\n            : this.transports[0];\n        this.readyState = \"opening\";\n        const transport = this.createTransport(transportName);\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this._onDrain.bind(this))\n            .on(\"packet\", this._onPacket.bind(this))\n            .on(\"error\", this._onError.bind(this))\n            .on(\"close\", (reason) => this._onClose(\"transport close\", reason));\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        SocketWithoutUpgrade.priorWebsocketSuccess =\n            \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n    }\n    /**\n     * Handles a packet.\n     *\n     * @private\n     */\n    _onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this._sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    this._resetPingTimeout();\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this._onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this._pingInterval = data.pingInterval;\n        this._pingTimeout = data.pingTimeout;\n        this._maxPayload = data.maxPayload;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this._resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @private\n     */\n    _resetPingTimeout() {\n        this.clearTimeoutFn(this._pingTimeoutTimer);\n        const delay = this._pingInterval + this._pingTimeout;\n        this._pingTimeoutTime = Date.now() + delay;\n        this._pingTimeoutTimer = this.setTimeoutFn(() => {\n            this._onClose(\"ping timeout\");\n        }, delay);\n        if (this.opts.autoUnref) {\n            this._pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @private\n     */\n    _onDrain() {\n        this.writeBuffer.splice(0, this._prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this._prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            const packets = this._getWritablePackets();\n            this.transport.send(packets);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this._prevBufferLen = packets.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP\n     * long-polling)\n     *\n     * @private\n     */\n    _getWritablePackets() {\n        const shouldCheckPayloadSize = this._maxPayload &&\n            this.transport.name === \"polling\" &&\n            this.writeBuffer.length > 1;\n        if (!shouldCheckPayloadSize) {\n            return this.writeBuffer;\n        }\n        let payloadSize = 1; // first packet type\n        for (let i = 0; i < this.writeBuffer.length; i++) {\n            const data = this.writeBuffer[i].data;\n            if (data) {\n                payloadSize += byteLength(data);\n            }\n            if (i > 0 && payloadSize > this._maxPayload) {\n                return this.writeBuffer.slice(0, i);\n            }\n            payloadSize += 2; // separator + packet type\n        }\n        return this.writeBuffer;\n    }\n    /**\n     * Checks whether the heartbeat timer has expired but the socket has not yet been notified.\n     *\n     * Note: this method is private for now because it does not really fit the WebSocket API, but if we put it in the\n     * `write()` method then the message would not be buffered by the Socket.IO client.\n     *\n     * @return {boolean}\n     * @private\n     */\n    /* private */ _hasPingExpired() {\n        if (!this._pingTimeoutTime)\n            return true;\n        const hasExpired = Date.now() > this._pingTimeoutTime;\n        if (hasExpired) {\n            this._pingTimeoutTime = 0;\n            nextTick(() => {\n                this._onClose(\"ping timeout\");\n            }, this.setTimeoutFn);\n        }\n        return hasExpired;\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} msg - message.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @return {Socket} for chaining.\n     */\n    write(msg, options, fn) {\n        this._sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a message. Alias of {@link Socket#write}.\n     *\n     * @param {String} msg - message.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @return {Socket} for chaining.\n     */\n    send(msg, options, fn) {\n        this._sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} type: packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @private\n     */\n    _sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options,\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     */\n    close() {\n        const close = () => {\n            this._onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @private\n     */\n    _onError(err) {\n        SocketWithoutUpgrade.priorWebsocketSuccess = false;\n        if (this.opts.tryAllTransports &&\n            this.transports.length > 1 &&\n            this.readyState === \"opening\") {\n            this.transports.shift();\n            return this._open();\n        }\n        this.emitReserved(\"error\", err);\n        this._onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @private\n     */\n    _onClose(reason, description) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this._pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (withEventListeners) {\n                if (this._beforeunloadEventListener) {\n                    removeEventListener(\"beforeunload\", this._beforeunloadEventListener, false);\n                }\n                if (this._offlineEventListener) {\n                    const i = OFFLINE_EVENT_LISTENERS.indexOf(this._offlineEventListener);\n                    if (i !== -1) {\n                        OFFLINE_EVENT_LISTENERS.splice(i, 1);\n                    }\n                }\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, description);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this._prevBufferLen = 0;\n        }\n    }\n}\nSocketWithoutUpgrade.protocol = protocol;\n/**\n * This class provides a WebSocket-like interface to connect to an Engine.IO server. The connection will be established\n * with one of the available low-level transports, like HTTP long-polling, WebSocket or WebTransport.\n *\n * This class comes with an upgrade mechanism, which means that once the connection is established with the first\n * low-level transport, it will try to upgrade to a better transport.\n *\n * In order to allow tree-shaking, there are no transports included, that's why the `transports` option is mandatory.\n *\n * @example\n * import { SocketWithUpgrade, WebSocket } from \"engine.io-client\";\n *\n * const socket = new SocketWithUpgrade({\n *   transports: [WebSocket]\n * });\n *\n * socket.on(\"open\", () => {\n *   socket.send(\"hello\");\n * });\n *\n * @see SocketWithoutUpgrade\n * @see Socket\n */\nexport class SocketWithUpgrade extends SocketWithoutUpgrade {\n    constructor() {\n        super(...arguments);\n        this._upgrades = [];\n    }\n    onOpen() {\n        super.onOpen();\n        if (\"open\" === this.readyState && this.opts.upgrade) {\n            for (let i = 0; i < this._upgrades.length; i++) {\n                this._probe(this._upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} name - transport name\n     * @private\n     */\n    _probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        SocketWithoutUpgrade.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", (msg) => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    SocketWithoutUpgrade.priorWebsocketSuccess =\n                        \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = (err) => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        if (this._upgrades.indexOf(\"webtransport\") !== -1 &&\n            name !== \"webtransport\") {\n            // favor WebTransport\n            this.setTimeoutFn(() => {\n                if (!failed) {\n                    transport.open();\n                }\n            }, 200);\n        }\n        else {\n            transport.open();\n        }\n    }\n    onHandshake(data) {\n        this._upgrades = this._filterUpgrades(data.upgrades);\n        super.onHandshake(data);\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} upgrades - server upgrades\n     * @private\n     */\n    _filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        for (let i = 0; i < upgrades.length; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\n/**\n * This class provides a WebSocket-like interface to connect to an Engine.IO server. The connection will be established\n * with one of the available low-level transports, like HTTP long-polling, WebSocket or WebTransport.\n *\n * This class comes with an upgrade mechanism, which means that once the connection is established with the first\n * low-level transport, it will try to upgrade to a better transport.\n *\n * @example\n * import { Socket } from \"engine.io-client\";\n *\n * const socket = new Socket();\n *\n * socket.on(\"open\", () => {\n *   socket.send(\"hello\");\n * });\n *\n * @see SocketWithoutUpgrade\n * @see SocketWithUpgrade\n */\nexport class Socket extends SocketWithUpgrade {\n    constructor(uri, opts = {}) {\n        const o = typeof uri === \"object\" ? uri : opts;\n        if (!o.transports ||\n            (o.transports && typeof o.transports[0] === \"string\")) {\n            o.transports = (o.transports || [\"polling\", \"websocket\", \"webtransport\"])\n                .map((transportName) => DEFAULT_TRANSPORTS[transportName])\n                .filter((t) => !!t);\n        }\n        super(uri, o);\n    }\n}\n","const withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeFile = typeof File === \"function\" ||\n    (typeof File !== \"undefined\" &&\n        toString.call(File) === \"[object FileConstructor]\");\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nexport function isBinary(obj) {\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File));\n}\nexport function hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (isBinary(obj)) {\n        return true;\n    }\n    if (obj.toJSON &&\n        typeof obj.toJSON === \"function\" &&\n        arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\n","import { isBinary } from \"./is-binary.js\";\n/**\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @public\n */\nexport function deconstructPacket(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n    return { packet: pack, buffers: buffers };\n}\nfunction _deconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (isBinary(data)) {\n        const placeholder = { _placeholder: true, num: buffers.length };\n        buffers.push(data);\n        return placeholder;\n    }\n    else if (Array.isArray(data)) {\n        const newData = new Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            newData[i] = _deconstructPacket(data[i], buffers);\n        }\n        return newData;\n    }\n    else if (typeof data === \"object\" && !(data instanceof Date)) {\n        const newData = {};\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                newData[key] = _deconstructPacket(data[key], buffers);\n            }\n        }\n        return newData;\n    }\n    return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @public\n */\nexport function reconstructPacket(packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    delete packet.attachments; // no longer useful\n    return packet;\n}\nfunction _reconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (data && data._placeholder === true) {\n        const isIndexValid = typeof data.num === \"number\" &&\n            data.num >= 0 &&\n            data.num < buffers.length;\n        if (isIndexValid) {\n            return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n        }\n        else {\n            throw new Error(\"illegal attachments\");\n        }\n    }\n    else if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n            data[i] = _reconstructPacket(data[i], buffers);\n        }\n    }\n    else if (typeof data === \"object\") {\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                data[key] = _reconstructPacket(data[key], buffers);\n            }\n        }\n    }\n    return data;\n}\n","import { Emitter } from \"@socket.io/component-emitter\";\nimport { deconstructPacket, reconstructPacket } from \"./binary.js\";\nimport { isBinary, hasBinary } from \"./is-binary.js\";\n/**\n * These strings must not be used as event names, as they have a special meaning.\n */\nconst RESERVED_EVENTS = [\n    \"connect\",\n    \"connect_error\",\n    \"disconnect\",\n    \"disconnecting\",\n    \"newListener\",\n    \"removeListener\", // used by the Node.js EventEmitter\n];\n/**\n * Protocol version.\n *\n * @public\n */\nexport const protocol = 5;\nexport var PacketType;\n(function (PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n})(PacketType || (PacketType = {}));\n/**\n * A socket.io Encoder instance\n */\nexport class Encoder {\n    /**\n     * Encoder constructor\n     *\n     * @param {function} replacer - custom replacer to pass down to JSON.parse\n     */\n    constructor(replacer) {\n        this.replacer = replacer;\n    }\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */\n    encode(obj) {\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n            if (hasBinary(obj)) {\n                return this.encodeAsBinary({\n                    type: obj.type === PacketType.EVENT\n                        ? PacketType.BINARY_EVENT\n                        : PacketType.BINARY_ACK,\n                    nsp: obj.nsp,\n                    data: obj.data,\n                    id: obj.id,\n                });\n            }\n        }\n        return [this.encodeAsString(obj)];\n    }\n    /**\n     * Encode packet as string.\n     */\n    encodeAsString(obj) {\n        // first is type\n        let str = \"\" + obj.type;\n        // attachments if we have them\n        if (obj.type === PacketType.BINARY_EVENT ||\n            obj.type === PacketType.BINARY_ACK) {\n            str += obj.attachments + \"-\";\n        }\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && \"/\" !== obj.nsp) {\n            str += obj.nsp + \",\";\n        }\n        // immediately followed by the id\n        if (null != obj.id) {\n            str += obj.id;\n        }\n        // json data\n        if (null != obj.data) {\n            str += JSON.stringify(obj.data, this.replacer);\n        }\n        return str;\n    }\n    /**\n     * Encode packet as 'buffer sequence' by removing blobs, and\n     * deconstructing packet into object with placeholders and\n     * a list of buffers.\n     */\n    encodeAsBinary(obj) {\n        const deconstruction = deconstructPacket(obj);\n        const pack = this.encodeAsString(deconstruction.packet);\n        const buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n    }\n}\n// see https://stackoverflow.com/questions/8511281/check-if-a-value-is-an-object-in-javascript\nfunction isObject(value) {\n    return Object.prototype.toString.call(value) === \"[object Object]\";\n}\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n */\nexport class Decoder extends Emitter {\n    /**\n     * Decoder constructor\n     *\n     * @param {function} reviver - custom reviver to pass down to JSON.stringify\n     */\n    constructor(reviver) {\n        super();\n        this.reviver = reviver;\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n    add(obj) {\n        let packet;\n        if (typeof obj === \"string\") {\n            if (this.reconstructor) {\n                throw new Error(\"got plaintext data when reconstructing a packet\");\n            }\n            packet = this.decodeString(obj);\n            const isBinaryEvent = packet.type === PacketType.BINARY_EVENT;\n            if (isBinaryEvent || packet.type === PacketType.BINARY_ACK) {\n                packet.type = isBinaryEvent ? PacketType.EVENT : PacketType.ACK;\n                // binary packet's json\n                this.reconstructor = new BinaryReconstructor(packet);\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) {\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n            else {\n                // non-binary full packet\n                super.emitReserved(\"decoded\", packet);\n            }\n        }\n        else if (isBinary(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n                throw new Error(\"got binary data when not reconstructing a packet\");\n            }\n            else {\n                packet = this.reconstructor.takeBinaryData(obj);\n                if (packet) {\n                    // received final buffer\n                    this.reconstructor = null;\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Unknown type: \" + obj);\n        }\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */\n    decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0)),\n        };\n        if (PacketType[p.type] === undefined) {\n            throw new Error(\"unknown packet type \" + p.type);\n        }\n        // look up attachments if type binary\n        if (p.type === PacketType.BINARY_EVENT ||\n            p.type === PacketType.BINARY_ACK) {\n            const start = i + 1;\n            while (str.charAt(++i) !== \"-\" && i != str.length) { }\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") {\n                throw new Error(\"Illegal attachments\");\n            }\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if (\"/\" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (\",\" === c)\n                    break;\n                if (i === str.length)\n                    break;\n            }\n            p.nsp = str.substring(start, i);\n        }\n        else {\n            p.nsp = \"/\";\n        }\n        // look up id\n        const next = str.charAt(i + 1);\n        if (\"\" !== next && Number(next) == next) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length)\n                    break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = this.tryParse(str.substr(i));\n            if (Decoder.isPayloadValid(p.type, payload)) {\n                p.data = payload;\n            }\n            else {\n                throw new Error(\"invalid payload\");\n            }\n        }\n        return p;\n    }\n    tryParse(str) {\n        try {\n            return JSON.parse(str, this.reviver);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    static isPayloadValid(type, payload) {\n        switch (type) {\n            case PacketType.CONNECT:\n                return isObject(payload);\n            case PacketType.DISCONNECT:\n                return payload === undefined;\n            case PacketType.CONNECT_ERROR:\n                return typeof payload === \"string\" || isObject(payload);\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                return (Array.isArray(payload) &&\n                    (typeof payload[0] === \"number\" ||\n                        (typeof payload[0] === \"string\" &&\n                            RESERVED_EVENTS.indexOf(payload[0]) === -1)));\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser's resources\n     */\n    destroy() {\n        if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n            this.reconstructor = null;\n        }\n    }\n}\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */\nclass BinaryReconstructor {\n    constructor(packet) {\n        this.packet = packet;\n        this.buffers = [];\n        this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */\n    takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n            // done with buffer list\n            const packet = reconstructPacket(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n        }\n        return null;\n    }\n    /**\n     * Cleans up binary packet reconstruction variables.\n     */\n    finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n    }\n}\n","export function on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\n","import { PacketType } from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\n/**\n * A Socket is the fundamental class for interacting with the server.\n *\n * A Socket belongs to a certain Namespace (by default /) and uses an underlying {@link Manager} to communicate.\n *\n * @example\n * const socket = io();\n *\n * socket.on(\"connect\", () => {\n *   console.log(\"connected\");\n * });\n *\n * // send an event to the server\n * socket.emit(\"foo\", \"bar\");\n *\n * socket.on(\"foobar\", () => {\n *   // an event was received from the server\n * });\n *\n * // upon disconnection\n * socket.on(\"disconnect\", (reason) => {\n *   console.log(`disconnected due to ${reason}`);\n * });\n */\nexport class Socket extends Emitter {\n    /**\n     * `Socket` constructor.\n     */\n    constructor(io, nsp, opts) {\n        super();\n        /**\n         * Whether the socket is currently connected to the server.\n         *\n         * @example\n         * const socket = io();\n         *\n         * socket.on(\"connect\", () => {\n         *   console.log(socket.connected); // true\n         * });\n         *\n         * socket.on(\"disconnect\", () => {\n         *   console.log(socket.connected); // false\n         * });\n         */\n        this.connected = false;\n        /**\n         * Whether the connection state was recovered after a temporary disconnection. In that case, any missed packets will\n         * be transmitted by the server.\n         */\n        this.recovered = false;\n        /**\n         * Buffer for packets received before the CONNECT packet\n         */\n        this.receiveBuffer = [];\n        /**\n         * Buffer for packets that will be sent once the socket is connected\n         */\n        this.sendBuffer = [];\n        /**\n         * The queue of packets to be sent with retry in case of failure.\n         *\n         * Packets are sent one by one, each waiting for the server acknowledgement, in order to guarantee the delivery order.\n         * @private\n         */\n        this._queue = [];\n        /**\n         * A sequence to generate the ID of the {@link QueuedPacket}.\n         * @private\n         */\n        this._queueSeq = 0;\n        this.ids = 0;\n        /**\n         * A map containing acknowledgement handlers.\n         *\n         * The `withError` attribute is used to differentiate handlers that accept an error as first argument:\n         *\n         * - `socket.emit(\"test\", (err, value) => { ... })` with `ackTimeout` option\n         * - `socket.timeout(5000).emit(\"test\", (err, value) => { ... })`\n         * - `const value = await socket.emitWithAck(\"test\")`\n         *\n         * From those that don't:\n         *\n         * - `socket.emit(\"test\", (value) => { ... });`\n         *\n         * In the first case, the handlers will be called with an error when:\n         *\n         * - the timeout is reached\n         * - the socket gets disconnected\n         *\n         * In the second case, the handlers will be simply discarded upon disconnection, since the client will never receive\n         * an acknowledgement from the server.\n         *\n         * @private\n         */\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        this._opts = Object.assign({}, opts);\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Whether the socket is currently disconnected\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"connect\", () => {\n     *   console.log(socket.disconnected); // false\n     * });\n     *\n     * socket.on(\"disconnect\", () => {\n     *   console.log(socket.disconnected); // true\n     * });\n     */\n    get disconnected() {\n        return !this.connected;\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            on(io, \"open\", this.onopen.bind(this)),\n            on(io, \"packet\", this.onpacket.bind(this)),\n            on(io, \"error\", this.onerror.bind(this)),\n            on(io, \"close\", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects.\n     *\n     * @example\n     * const socket = io();\n     *\n     * console.log(socket.active); // true\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   if (reason === \"io server disconnect\") {\n     *     // the disconnection was initiated by the server, you need to manually reconnect\n     *     console.log(socket.active); // false\n     *   }\n     *   // else the socket will automatically try to reconnect\n     *   console.log(socket.active); // true\n     * });\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @example\n     * const socket = io({\n     *   autoConnect: false\n     * });\n     *\n     * socket.connect();\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"])\n            this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for {@link connect()}.\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * This method mimics the WebSocket.send() method.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/send\n     *\n     * @example\n     * socket.send(\"hello\");\n     *\n     * // this is equivalent to\n     * socket.emit(\"message\", \"hello\");\n     *\n     * @return self\n     */\n    send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @example\n     * socket.emit(\"hello\", \"world\");\n     *\n     * // all serializable datastructures are supported (no need to call JSON.stringify)\n     * socket.emit(\"hello\", 1, \"2\", { 3: [\"4\"], 5: Uint8Array.from([6]) });\n     *\n     * // with an acknowledgement from the server\n     * socket.emit(\"hello\", \"world\", (val) => {\n     *   // ...\n     * });\n     *\n     * @return self\n     */\n    emit(ev, ...args) {\n        var _a, _b, _c;\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            throw new Error('\"' + ev.toString() + '\" is a reserved event name');\n        }\n        args.unshift(ev);\n        if (this._opts.retries && !this.flags.fromQueue && !this.flags.volatile) {\n            this._addToQueue(args);\n            return this;\n        }\n        const packet = {\n            type: PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            const id = this.ids++;\n            const ack = args.pop();\n            this._registerAckCallback(id, ack);\n            packet.id = id;\n        }\n        const isTransportWritable = (_b = (_a = this.io.engine) === null || _a === void 0 ? void 0 : _a.transport) === null || _b === void 0 ? void 0 : _b.writable;\n        const isConnected = this.connected && !((_c = this.io.engine) === null || _c === void 0 ? void 0 : _c._hasPingExpired());\n        const discardPacket = this.flags.volatile && !isTransportWritable;\n        if (discardPacket) {\n        }\n        else if (isConnected) {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * @private\n     */\n    _registerAckCallback(id, ack) {\n        var _a;\n        const timeout = (_a = this.flags.timeout) !== null && _a !== void 0 ? _a : this._opts.ackTimeout;\n        if (timeout === undefined) {\n            this.acks[id] = ack;\n            return;\n        }\n        // @ts-ignore\n        const timer = this.io.setTimeoutFn(() => {\n            delete this.acks[id];\n            for (let i = 0; i < this.sendBuffer.length; i++) {\n                if (this.sendBuffer[i].id === id) {\n                    this.sendBuffer.splice(i, 1);\n                }\n            }\n            ack.call(this, new Error(\"operation has timed out\"));\n        }, timeout);\n        const fn = (...args) => {\n            // @ts-ignore\n            this.io.clearTimeoutFn(timer);\n            ack.apply(this, args);\n        };\n        fn.withError = true;\n        this.acks[id] = fn;\n    }\n    /**\n     * Emits an event and waits for an acknowledgement\n     *\n     * @example\n     * // without timeout\n     * const response = await socket.emitWithAck(\"hello\", \"world\");\n     *\n     * // with a specific timeout\n     * try {\n     *   const response = await socket.timeout(1000).emitWithAck(\"hello\", \"world\");\n     * } catch (err) {\n     *   // the server did not acknowledge the event in the given delay\n     * }\n     *\n     * @return a Promise that will be fulfilled when the server acknowledges the event\n     */\n    emitWithAck(ev, ...args) {\n        return new Promise((resolve, reject) => {\n            const fn = (arg1, arg2) => {\n                return arg1 ? reject(arg1) : resolve(arg2);\n            };\n            fn.withError = true;\n            args.push(fn);\n            this.emit(ev, ...args);\n        });\n    }\n    /**\n     * Add the packet to the queue.\n     * @param args\n     * @private\n     */\n    _addToQueue(args) {\n        let ack;\n        if (typeof args[args.length - 1] === \"function\") {\n            ack = args.pop();\n        }\n        const packet = {\n            id: this._queueSeq++,\n            tryCount: 0,\n            pending: false,\n            args,\n            flags: Object.assign({ fromQueue: true }, this.flags),\n        };\n        args.push((err, ...responseArgs) => {\n            if (packet !== this._queue[0]) {\n                // the packet has already been acknowledged\n                return;\n            }\n            const hasError = err !== null;\n            if (hasError) {\n                if (packet.tryCount > this._opts.retries) {\n                    this._queue.shift();\n                    if (ack) {\n                        ack(err);\n                    }\n                }\n            }\n            else {\n                this._queue.shift();\n                if (ack) {\n                    ack(null, ...responseArgs);\n                }\n            }\n            packet.pending = false;\n            return this._drainQueue();\n        });\n        this._queue.push(packet);\n        this._drainQueue();\n    }\n    /**\n     * Send the first packet of the queue, and wait for an acknowledgement from the server.\n     * @param force - whether to resend a packet that has not been acknowledged yet\n     *\n     * @private\n     */\n    _drainQueue(force = false) {\n        if (!this.connected || this._queue.length === 0) {\n            return;\n        }\n        const packet = this._queue[0];\n        if (packet.pending && !force) {\n            return;\n        }\n        packet.pending = true;\n        packet.tryCount++;\n        this.flags = packet.flags;\n        this.emit.apply(this, packet.args);\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        if (typeof this.auth == \"function\") {\n            this.auth((data) => {\n                this._sendConnectPacket(data);\n            });\n        }\n        else {\n            this._sendConnectPacket(this.auth);\n        }\n    }\n    /**\n     * Sends a CONNECT packet to initiate the Socket.IO session.\n     *\n     * @param data\n     * @private\n     */\n    _sendConnectPacket(data) {\n        this.packet({\n            type: PacketType.CONNECT,\n            data: this._pid\n                ? Object.assign({ pid: this._pid, offset: this._lastOffset }, data)\n                : data,\n        });\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            this.emitReserved(\"connect_error\", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @param description\n     * @private\n     */\n    onclose(reason, description) {\n        this.connected = false;\n        delete this.id;\n        this.emitReserved(\"disconnect\", reason, description);\n        this._clearAcks();\n    }\n    /**\n     * Clears the acknowledgement handlers upon disconnection, since the client will never receive an acknowledgement from\n     * the server.\n     *\n     * @private\n     */\n    _clearAcks() {\n        Object.keys(this.acks).forEach((id) => {\n            const isBuffered = this.sendBuffer.some((packet) => String(packet.id) === id);\n            if (!isBuffered) {\n                // note: handlers that do not accept an error as first argument are ignored here\n                const ack = this.acks[id];\n                delete this.acks[id];\n                if (ack.withError) {\n                    ack.call(this, new Error(\"socket has been disconnected\"));\n                }\n            }\n        });\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    this.onconnect(packet.data.sid, packet.data.pid);\n                }\n                else {\n                    this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                }\n                break;\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case PacketType.CONNECT_ERROR:\n                this.destroy();\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        if (null != packet.id) {\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n        if (this._pid && args.length && typeof args[args.length - 1] === \"string\") {\n            this._lastOffset = args[args.length - 1];\n        }\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            self.packet({\n                type: PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowledgement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if (typeof ack !== \"function\") {\n            return;\n        }\n        delete this.acks[packet.id];\n        // @ts-ignore FIXME ack is incorrectly inferred as 'never'\n        if (ack.withError) {\n            packet.data.unshift(null);\n        }\n        // @ts-ignore\n        ack.apply(this, packet.data);\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id, pid) {\n        this.id = id;\n        this.recovered = pid && this._pid === pid;\n        this._pid = pid; // defined only if connection state recovery is enabled\n        this.connected = true;\n        this.emitBuffered();\n        this.emitReserved(\"connect\");\n        this._drainQueue(true);\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        });\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually. In that case, the socket will not try to reconnect.\n     *\n     * If this is the last active Socket instance of the {@link Manager}, the low-level connection will be closed.\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   // console.log(reason); prints \"io client disconnect\"\n     * });\n     *\n     * socket.disconnect();\n     *\n     * @return self\n     */\n    disconnect() {\n        if (this.connected) {\n            this.packet({ type: PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose(\"io client disconnect\");\n        }\n        return this;\n    }\n    /**\n     * Alias for {@link disconnect()}.\n     *\n     * @return self\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @example\n     * socket.compress(false).emit(\"hello\");\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @example\n     * socket.volatile.emit(\"hello\"); // the server may or may not receive it\n     *\n     * @returns self\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the callback will be called with an error when the\n     * given number of milliseconds have elapsed without an acknowledgement from the server:\n     *\n     * @example\n     * socket.timeout(5000).emit(\"my-event\", (err) => {\n     *   if (err) {\n     *     // the server did not acknowledge the event in the given delay\n     *   }\n     * });\n     *\n     * @returns self\n     */\n    timeout(timeout) {\n        this.flags.timeout = timeout;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @example\n     * socket.onAny((event, ...args) => {\n     *   console.log(`got ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @example\n     * socket.prependAny((event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * }\n     *\n     * socket.onAny(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAny(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAny();\n     *\n     * @param listener\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.onAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.prependAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * }\n     *\n     * socket.onAnyOutgoing(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAnyOutgoing(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAnyOutgoing();\n     *\n     * @param [listener] - the catch-all listener (optional)\n     */\n    offAnyOutgoing(listener) {\n        if (!this._anyOutgoingListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyOutgoingListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyOutgoingListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAnyOutgoing() {\n        return this._anyOutgoingListeners || [];\n    }\n    /**\n     * Notify the listeners for each packet sent\n     *\n     * @param packet\n     *\n     * @private\n     */\n    notifyOutgoingListeners(packet) {\n        if (this._anyOutgoingListeners && this._anyOutgoingListeners.length) {\n            const listeners = this._anyOutgoingListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, packet.data);\n            }\n        }\n    }\n}\n","/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\nexport function Backoff(opts) {\n    opts = opts || {};\n    this.ms = opts.min || 100;\n    this.max = opts.max || 10000;\n    this.factor = opts.factor || 2;\n    this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n    this.attempts = 0;\n}\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\nBackoff.prototype.duration = function () {\n    var ms = this.ms * Math.pow(this.factor, this.attempts++);\n    if (this.jitter) {\n        var rand = Math.random();\n        var deviation = Math.floor(rand * this.jitter * ms);\n        ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\n    }\n    return Math.min(ms, this.max) | 0;\n};\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\nBackoff.prototype.reset = function () {\n    this.attempts = 0;\n};\n/**\n * Set the minimum duration\n *\n * @api public\n */\nBackoff.prototype.setMin = function (min) {\n    this.ms = min;\n};\n/**\n * Set the maximum duration\n *\n * @api public\n */\nBackoff.prototype.setMax = function (max) {\n    this.max = max;\n};\n/**\n * Set the jitter\n *\n * @api public\n */\nBackoff.prototype.setJitter = function (jitter) {\n    this.jitter = jitter;\n};\n","import { Socket as Engine, installTimerFunctions, nextTick, } from \"engine.io-client\";\nimport { Socket } from \"./socket.js\";\nimport * as parser from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Backoff } from \"./contrib/backo2.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\nexport class Manager extends Emitter {\n    constructor(uri, opts) {\n        var _a;\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        installTimerFunctions(this, opts);\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n        this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        if (!v) {\n            this.skipReconnect = true;\n        }\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        this.engine = new Engine(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = on(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        const onError = (err) => {\n            this.cleanup();\n            this._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                this.maybeReconnectOnOpen();\n            }\n        };\n        // emit `error`\n        const errorSub = on(socket, \"error\", onError);\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            // set timer\n            const timer = this.setTimeoutFn(() => {\n                openSubDestroy();\n                onError(new Error(\"timeout\"));\n                socket.close();\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(() => {\n                this.clearTimeoutFn(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push(on(socket, \"ping\", this.onping.bind(this)), on(socket, \"data\", this.ondata.bind(this)), on(socket, \"error\", this.onerror.bind(this)), on(socket, \"close\", this.onclose.bind(this)), \n        // @ts-ignore\n        on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        try {\n            this.decoder.add(data);\n        }\n        catch (e) {\n            this.onclose(\"parse error\", e);\n        }\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        // the nextTick call prevents an exception in a user-provided event listener from triggering a disconnection due to a \"parse error\"\n        nextTick(() => {\n            this.emitReserved(\"packet\", packet);\n        }, this.setTimeoutFn);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        else if (this._autoConnect && !socket.active) {\n            socket.connect();\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        this.onclose(\"forced close\");\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called when:\n     *\n     * - the low-level engine is closed\n     * - the parser encountered a badly formatted packet\n     * - all sockets are disconnected\n     *\n     * @private\n     */\n    onclose(reason, description) {\n        var _a;\n        this.cleanup();\n        (_a = this.engine) === null || _a === void 0 ? void 0 : _a.close();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason, description);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            this._reconnecting = true;\n            const timer = this.setTimeoutFn(() => {\n                if (self.skipReconnect)\n                    return;\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(() => {\n                this.clearTimeoutFn(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\n","import { url } from \"./url.js\";\nimport { Manager } from \"./manager.js\";\nimport { Socket } from \"./socket.js\";\n/**\n * Managers cache.\n */\nconst cache = {};\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = url(uri, opts.path || \"/socket.io\");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        io = new Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            cache[id] = new Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\n// so that \"lookup\" can be used both as a function (e.g. `io(...)`) and as a\n// namespace (e.g. `io.connect(...)`), for backward compatibility\nObject.assign(lookup, {\n    Manager,\n    Socket,\n    io: lookup,\n    connect: lookup,\n});\n/**\n * Protocol version.\n *\n * @public\n */\nexport { protocol } from \"socket.io-parser\";\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\nexport { Manager, Socket, lookup as io, lookup as connect, lookup as default, };\nexport { Fetch, NodeXHR, XHR, NodeWebSocket, WebSocket, WebTransport, } from \"engine.io-client\";\n","import { parse } from \"engine.io-client\";\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nexport function url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        obj = parse(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\n","const INERTIA = 0.07;\nconst MAX_SPEED = 5;\n\nexport function movePlayer(player, map) {\n\tconst angleDiff = player.targetDeg - player.deg;\n\tif (Math.abs(angleDiff) > Math.PI) {\n\t\tif (angleDiff > 0) {\n\t\t\tplayer.deg += (angleDiff - 2 * Math.PI) * INERTIA;\n\t\t} else {\n\t\t\tplayer.deg += (angleDiff + 2 * Math.PI) * INERTIA;\n\t\t}\n\t} else {\n\t\tplayer.deg += angleDiff * INERTIA;\n\t}\n\n\tplayer.deg = (player.deg + 2 * Math.PI) % (2 * Math.PI);\n\n\tplayer.velocityX = Math.cos(player.deg) * MAX_SPEED;\n\tplayer.velocityY = Math.sin(player.deg) * MAX_SPEED;\n\n\tconst newX = player.x + player.velocityX;\n\tconst newY = player.y + player.velocityY;\n\n\tif (newX < 0) {\n\t\tplayer.x = 0;\n\t} else if (newX > map.width) {\n\t\tplayer.x = map.width;\n\t} else {\n\t\tplayer.x = newX;\n\t}\n\n\tif (newY < 0) {\n\t\tplayer.y = 0;\n\t} else if (newY > map.height) {\n\t\tplayer.y = map.height;\n\t} else {\n\t\tplayer.y = newY;\n\t}\n}","import { Player } from './class/Player.js';\nimport { GameMap } from './class/Map.js';\nimport { updateScoreboard, simulateScores } from './handlers/ScoreHandler.js';\nimport {\n\thandleMouseDirection,\n} from './handlers/MovementPlayerHandler.js';\nimport { Food } from './class/Food.js';\nimport { Circle, Quadtree } from '@timohausmann/quadtree-ts';\nimport { io } from 'socket.io-client';\nimport { updatePlayerSheet } from '../server/pHandler.js';\nimport { showBonus } from './handlers/BonusHandler.js';\nimport { movePlayer } from '../server/movement.js';\n\nexport const canvas = document.querySelector('.gameCanvas');\nconst fpsDiv = document.querySelector('#fps');\nconst context = canvas.getContext('2d');\nconst canvasResizeObserver = new ResizeObserver(resampleCanvas);\n\nconst players = [];\nlet foodQuadTree;\nlet map;\nexport let socket;\nexport let player;\nlet nbFrame = 0;\n\ninitializeGame();\n\ncanvasResizeObserver.observe(canvas);\n\nfunction resampleCanvas() {\n\tcanvas.width = canvas.clientWidth;\n\tcanvas.height = canvas.clientHeight;\n}\n\nfunction initializeGame() {\n\tsetupSocket();\n}\n\nfunction setupSocket() {\n\tsocket = io(`${window.location.hostname}:3000`);\n\tsocket.on('connect', () => {\n\t\tconsole.log('Connected to server');\n\t\trequestRoomChoices(socket);\n\t});\n\n\tsocket.on('disconnect', () => {\n\t\tconsole.log('Disconnected from server');\n\t});\n\n\tsocket.on('connect_error', error => {\n\t\tconsole.error('Failed to connect to server:', error);\n\t});\n}\n\nfunction requestRoomChoices(socket) {\n\tsocket.on('room:choices', rooms => {\n\t\tconsole.log('Available rooms:', rooms);\n\t\tconst room = prompt('Enter room name: ' + rooms.join(', '));\n\t\tsocket.emit('room:join', room);\n\n\t\tsocket.on('room:joined', () => {\n\t\t\tconsole.log('Joined room:', room);\n\t\t\tsetupUser(socket);\n\t\t});\n\t});\n}\n\nfunction setupUser(socket) {\n\tconst usrname = prompt('Enter your username: ');\n\tsocket.emit('init:ready', usrname || 'Anonymous');\n\n\tfunction addUser(newPlayer) {\n\t\tif (players.some(p => p.id === newPlayer.id)) {\n\t\t\treturn;\n\t\t}\n\t\tif (newPlayer.id === socket.id) {\n\t\t\tif (player) return;\n\t\t\tplayer = new Player(\n\t\t\t\tnewPlayer.name,\n\t\t\t\tnewPlayer.x,\n\t\t\t\tnewPlayer.y,\n\t\t\t\tnewPlayer.id\n\t\t\t);\n\t\t\tplayers.push(player);\n\t\t} else {\n\t\t\tplayers.push(\n\t\t\t\tnew Player(newPlayer.name, newPlayer.x, newPlayer.y, newPlayer.id)\n\t\t\t);\n\t\t}\n\t}\n\tsocket.on('room:newPlayer', newPlayer => {\n\t\tconsole.log('New player in room:', newPlayer.name);\n\t\taddUser(newPlayer);\n\t});\n\tsocket.on('room:players', newPlayers => {\n\t\tconsole.log(\n\t\t\t'Players in room:',\n\t\t\tnewPlayers.map(p => p.name)\n\t\t);\n\t\tnewPlayers.forEach(newPlayer => {\n\t\t\taddUser(newPlayer);\n\t\t});\n\t\tif (player) {\n\t\t\tsocket.emit('init:receivedPlayers');\n\t\t\tsocket.on('init:map', m => {\n\t\t\t\tmap = new GameMap(m.width, m.height);\n\t\t\t\tsocket.emit('init:mapReceived');\n\t\t\t\tsocket.on('init:food', food => {\n\t\t\t\t\tfoodQuadTree = new Quadtree({\n\t\t\t\t\t\twidth: map.width,\n\t\t\t\t\t\theight: map.height,\n\t\t\t\t\t});\n\t\t\t\t\tfood.forEach(f => {\n\t\t\t\t\t\tfoodQuadTree.insert(new Food(f.bonus, f.x, f.y));\n\t\t\t\t\t});\n\t\t\t\t\tsocket.emit('init:foodReceived');\n\t\t\t\t\tlet ready = prompt('type OK when you are ready to start the game');\n\t\t\t\t\twhile (ready !== 'OK') {\n\t\t\t\t\t\tready = prompt('type OK when you are ready to start the game');\n\t\t\t\t\t}\n\t\t\t\t\tsocket.emit('init:go');\n\t\t\t\t\tconsole.log('Game is ready');\n\t\t\t\t\tsocket.on('game:start', () => {\n\t\t\t\t\t\tconsole.log('Game started');\n\t\t\t\t\t\tlaunchClientGame(socket);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t});\n}\nlet stop = false;\n\nfunction launchClientGame() {\n\tconst updInter = setInterval(updateGame, 1000 / 60);\n\tconst scInter = setInterval(() => {\n\t\tsimulateScores(players);\n\t\tupdateScoreboard(players);\n\t}, 1000);\n\n\trequestAnimationFrame(render);\n\n\tsocket.on('food:ate', data => {\n\t\tconst p = players.find(p => p.id === data.playerId);\n\t\tif (!p) return;\n\t\tconst f = new Food(data.food.bonus, data.food.x, data.food.y);\n\t\tconst food = foodQuadTree.retrieve(\n\t\t\tnew Circle({ x: f.x, y: f.y, r: f.size })\n\t\t);\n\t\tif (food.length > 0) {\n\t\t\tconst f = food.find(fo => fo.x === data.food.x && fo.y === data.food.y);\n\t\t\tif (f) {\n\t\t\t\tfoodQuadTree.remove(f);\n\t\t\t}\n\t\t}\n\t\tconsole.log(\n\t\t\t`Player ${p.name} ate food with bonus ${data.food.bonus}, current size: ${p.size}`\n\t\t);\n\t\tconst res = p.addFood(data.food.bonus);\n\t\tconsole.log(`new size: ${p.size}`);\n\t\tif (p.id == player.id && res) {\n\t\t\tsocket.emit('level:up', '');\n\t\t}\n\t});\n\n\tsocket.on('player:moved', content => {\n\t\tconst p = players.find(p => p.id === content.playerId);\n\t\tif (p) {\n\t\t\tp.x = content.x;\n\t\t\tp.y = content.y;\n\t\t}\n\t});\n\n\tsocket.on('player:killed', content => {\n\t\tconst p = players.find(p => p.id === content.playerId);\n\t\tconst target = players.find(p => p.id === content.targetId);\n\t\tif (p && target) {\n\t\t\tp.addKill(target.size);\n\t\t\tplayers.splice(players.indexOf(target), 1);\n\t\t\tconsole.log(`Player ${p.name} killed ${target.name}`);\n\t\t\tif (target === player) {\n\t\t\t\tconsole.log('You were killed');\n\t\t\t\tclearInterval(updInter);\n\t\t\t\tclearInterval(scInter);\n\t\t\t\tstop = true;\n\t\t\t}\n\t\t}\n\t});\n\n\tsocket.on('game:end', () => {\n\t\tconsole.log('Game ended');\n\t\tclearInterval(updInter);\n\t\tclearInterval(scInter);\n\t\tstop = true;\n\t});\n\n\tsocket.on('player:bonus', content => {\n\t\tconst listBonus = content;\n\t\tshowBonus(listBonus);\n\t});\n}\n\nfunction render() {\n\tif (stop) {\n\t\tcontext.clearRect(0, 0, canvas.width, canvas.height);\n\t\tcontext.font = '48px serif';\n\t\tcontext.fillStyle = 'black';\n\t\tcontext.fillText('Game Over', canvas.width / 2, canvas.height / 2);\n\t\treturn;\n\t}\n\tcontext.clearRect(0, 0, canvas.width, canvas.height);\n\tconst offsetX = -player.x + canvas.width / 2;\n\tconst offsetY = -player.y + canvas.height / 2;\n\n\tcontext.translate(offsetX, offsetY);\n\n\tmap.drawDecor(context, player, canvas.width / 2, canvas.height / 2);\n\tmap.drawFood(\n\t\tcontext,\n\t\tfoodQuadTree,\n\t\tplayer,\n\t\tcanvas.width / 2,\n\t\tcanvas.height / 2\n\t);\n\n\tplayers.forEach(p => {\n\t\tif (\n\t\t\tmap.drawPlayer(context, p, player, canvas.width / 2, canvas.height / 2)\n\t\t) {\n\t\t\tmap.drawName(context, p);\n\t\t}\n\t});\n\n\tcontext.resetTransform();\n\tnbFrame++;\n\n\trequestAnimationFrame(render);\n}\n\nfunction handleBonus(p) {\n\tfoodQuadTree\n\t\t.retrieve(new Circle({ x: p.x, y: p.y, r: p.size }))\n\t\t.forEach(food => {\n\t\t\tconst distance = Math.hypot(food.x - p.x, food.y - p.y);\n\t\t\tif (distance <= p.size) {\n\t\t\t\tsocket.emit('player:eat', {\n\t\t\t\t\tplayerId: p.id,\n\t\t\t\t\tx: food.x,\n\t\t\t\t\ty: food.y,\n\t\t\t\t\tbonus: food.bonus,\n\t\t\t\t});\n\t\t\t}\n\t\t});\n}\n\nfunction handleKill(p, players) {\n\tfor (let i = 0; i < players.length; i++) {\n\t\tconst other = players[i];\n\t\tif (other === p) continue;\n\n\t\tconst deltaXPlayer = other.x - p.x;\n\t\tconst deltaYPlayer = other.y - p.y;\n\t\tconst distanceToPlayer = Math.hypot(deltaXPlayer, deltaYPlayer);\n\n\t\tif (p.size > other.size && distanceToPlayer < p.size) {\n\t\t\tp.addKill(other.size);\n\t\t\tsocket.emit('player:kill', {\n\t\t\t\tplayerId: p.id,\n\t\t\t\ttargetId: other.id,\n\t\t\t});\n\t\t}\n\t}\n}\n\nfunction updateGame() {\n\tmovePlayer(player, map);\n\tsocket.emit('player:move', {\n\t\tplayerId: player.id,\n\t\tx: player.x,\n\t\ty: player.y,\n\t});\n\thandleBonus(player);\n\thandleKill(player, players);\n\tplayers.sort((a, b) => a.size - b.size);\n}\n\n//document.addEventListener('keydown', handleKeydown);\n//document.addEventListener('keyup', handleKeyup);\ndocument.addEventListener('mousemove', handleMouseDirection);\nsetInterval(() => {\n\tif (player) {\n\t\tupdatePlayerSheet(player);\n\t}\n}, 1000);\n","export function updateScoreboard(players) {\r\n\tconst scoreboardBody = document.getElementById('scoreboard-body');\r\n\tscoreboardBody.innerHTML = '';\r\n\r\n\tconst sortedPlayers = players\r\n\t\t.sort((a, b) => b.score.getTotalScore() - a.score.getTotalScore())\r\n\t\t.slice(0, 10);\r\n\r\n\tsortedPlayers.forEach(player => {\r\n\t\tconst row = document.createElement('tr');\r\n\t\trow.innerHTML = `<td>${player.name}</td><td>${player.score.getTotalScore().toFixed(2)}</td>`;\r\n\t\tscoreboardBody.appendChild(row);\r\n\t});\r\n}\r\n\r\nexport function simulateScores(players) {\r\n\tplayers.forEach(player => {\r\n\t\tconst randomIncrease = Math.floor(1);\r\n\t\tplayer.score.addFoodScore(randomIncrease);\r\n\t});\r\n}\r\n","import { Bonus, BonusType } from '../class/Bonus.js';\n\nconst theBonus = [];\n\nexport const RandomBonus = () => {\n\tconst bonusKeys = Object.keys(BonusType);\n\ttheBonus.length = 0;\n\twhile (theBonus.length < 3) {\n\t\tconst randomBonus =\n\t\t\tBonusType[bonusKeys[Math.floor(Math.random() * bonusKeys.length)]];\n\t\ttheBonus.push(new Bonus(randomBonus));\n\t}\n\treturn theBonus;\n};\n\nexport function showBonus(bonusList) {\n\tconst container = document.querySelector('.BonusList');\n\n\tif (container.querySelectorAll('div').length >= 3) {\n\t\treturn;\n\t}\n\n\tconsole.log('MERDE');\n\n\tcontainer.style.display = 'flex';\n\tbonusList.forEach(bonus => {\n\t\tconst bonusItem = document.createElement('div');\n\t\tbonusItem.className = 'bonus-item';\n\n\t\tconst img = document.createElement('img');\n\t\timg.src = 'CarteBonus.png';\n\n\t\tconst text = document.createElement('p');\n\t\ttext.innerText = bonus.text;\n\n\t\tbonusItem.appendChild(img);\n\t\tbonusItem.appendChild(text);\n\t\tcontainer.appendChild(bonusItem);\n\t});\n}\n","import { canvas, player } from \"../Game.js\";\r\n\r\n\r\n\r\nexport function handleMouseDirection(event) {\r\n\tconst rect = canvas.getBoundingClientRect();\r\n\tconst canvasMiddleX = rect.width / 2;\r\n\tconst canvasMiddleY = rect.height / 2;\r\n\r\n\tplayer.targetDeg = Math.atan2(event.clientY - canvasMiddleY, event.clientX - canvasMiddleX);\r\n}\r\n\r\n","import { Player } from '../client/class/Player.js';\n\nconst KILL_EVENT = 'kill';\nconst EAT_EVENT = 'eat';\n\n\nexport class pHandler {\n\tplayer;\n\tsocket;\n\n\tconstructor(player, socket) {\n\t\tthis.player = player;\n\t\tthis.socket = socket;\n\n\n\t\tthis.socket.on('kill', (content) => {\n\t\t\tthis.handleKill(content);\n\t\t});\n\n\t\tthis.socket.on('eat', (content) => {\n\t\t\tthis.handleEat(content);\n\t\t});\n\t}\n}\n\nexport function updatePlayerSheet(player) {\n    const playerSheetBody = document.getElementById(\"playersheet-body\");\n    if (!playerSheetBody) return;\n\n    playerSheetBody.innerHTML = \"\";\n\n\n    const nameRow = document.createElement(\"tr\");\n    const nameCell = document.createElement(\"td\");\n    nameCell.textContent = `Name: ${player.name}`;\n    nameCell.colSpan = 2;\n    nameRow.appendChild(nameCell);\n\n\t\tconst levelRow = document.createElement(\"tr\");\n\t\tconst levelCell = document.createElement(\"td\");\n\t\tlevelRow.textContent = `Level: ${player.score.level}`;\n\t\tlevelCell.colSpan = 2;\n\t\tlevelRow.appendChild(nameCell);\n\n    const sizeRow = document.createElement(\"tr\");\n    const sizeCell = document.createElement(\"td\");\n    sizeCell.textContent = `Size: ${player.size.toFixed(2)}`;\n    sizeCell.colSpan = 2;\n    sizeRow.appendChild(sizeCell);\n\n    const scoreRow = document.createElement(\"tr\");\n    const scoreCell = document.createElement(\"td\");\n\t\tscoreCell.textContent = `Score: ${player.score.getTotalScore().toFixed(2)}`;\n    scoreCell.colSpan = 2;\n    scoreRow.appendChild(scoreCell);\n\n    playerSheetBody.appendChild(nameRow);\n\t\tplayerSheetBody.appendChild(levelRow)\n    playerSheetBody.appendChild(sizeRow);\n    playerSheetBody.appendChild(scoreRow);\n}"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","Score","_classCallCheck","_defineProperty","this","foodScore","bonusScore","coefScore","killScore","exp","level","amount","coef","rate","Math","max","Player","name","x","y","id","size","score","xDirection","yDirection","speed","ready","keyPressed","deg","random","PI","targetDeg","addFoodScore","increaseSize","gainExp","addBonusScore","addKillScore","applyScoreDecay","reset","Quadtree","constructor","props","bounds","width","height","maxObjects","maxLevels","objects","nodes","getIndex","qtIndex","split","coords","i","insert","length","indexes","push","k","retrieve","returnObjects","concat","Array","from","Set","remove","fast","indexOf","splice","join","update","allObjects","bla","uniqueObjects","clear","Rectangle","data","node","boundsCenterX","boundsCenterY","startIsNorth","startIsWest","endIsEast","endIsSouth","Circle","r","w2","h2","x2","y2","intersectRect","minX","minY","maxX","maxY","deltaX","min","deltaY","GameMap","context","player","moveTo","font","fillStyle","fillText","playerPosition","yLimit","xLimit","xStart","yStart","beginPath","lineTo","stroke","foodQuadTree","viewLength","viewHeight","forEach","food","arc","fill","strokeStyle","mainPlayer","playerIsXVisible","playerIsYVisible","Food","_Circle","bonus","_this","_callSuper","_inherits","PACKET_TYPES","create","PACKET_TYPES_REVERSE","keys","ERROR_PACKET","type","withNativeBlob","Blob","toString","withNativeArrayBuffer","ArrayBuffer","isView","buffer","encodePacket","supportsBinary","callback","encodeBlobAsBase64","fileReader","FileReader","onload","content","result","readAsDataURL","toArray","Uint8Array","byteOffset","byteLength","TEXT_ENCODER","lookup","chars","charCodeAt","decodePacket","encodedPacket","binaryType","mapBinary","charAt","decodeBase64Packet","substring","decoded","base64","encoded1","encoded2","encoded3","encoded4","bufferLength","len","p","arraybuffer","bytes","decode","SEPARATOR","String","fromCharCode","TEXT_DECODER","totalLength","chunks","reduce","acc","chunk","concatChunks","shift","j","slice","Emitter","mixin","on","addEventListener","event","fn","_callbacks","once","off","apply","arguments","removeListener","removeAllListeners","removeEventListener","cb","callbacks","emit","args","emitReserved","listeners","hasListeners","nextTick","Promise","resolve","then","setTimeoutFn","globalThisShim","self","window","Function","pick","attr","NATIVE_SET_TIMEOUT","setTimeout","NATIVE_CLEAR_TIMEOUT","clearTimeout","installTimerFunctions","opts","useNativeTimers","bind","clearTimeoutFn","randomString","Date","now","TransportError","Error","reason","description","super","Transport","writable","query","socket","forceBase64","onError","open","readyState","doOpen","close","doClose","onClose","send","packets","write","onOpen","onData","packet","onPacket","details","pause","onPause","createUri","schema","_hostname","_port","path","_query","hostname","port","secure","Number","encodedQuery","str","encodeURIComponent","_polling","_poll","total","doPoll","encodedPayload","encodedPackets","decodedPacket","decodePayload","count","encodePayload","doWrite","uri","timestampRequests","timestampParam","sid","b64","XMLHttpRequest","err","hasCORS","empty","BaseXHR","location","isSSL","protocol","xd","req","request","method","xhrStatus","pollXhr","Request","createRequest","_opts","_method","_uri","_data","undefined","_create","_a","xdomain","xhr","_xhr","extraHeaders","setDisableHeaderCheck","setRequestHeader","e","cookieJar","addCookies","withCredentials","requestTimeout","timeout","onreadystatechange","parseCookies","getResponseHeader","status","_onLoad","_onError","document","_index","requestsCount","requests","_cleanup","fromError","abort","responseText","unloadHandler","attachEvent","hasXHR2","newRequest","responseType","isReactNative","navigator","product","toLowerCase","BaseWS","protocols","headers","ws","createSocket","addEventListeners","onopen","autoUnref","_socket","unref","onclose","closeEvent","onmessage","ev","onerror","lastPacket","WebSocketCtor","WebSocket","MozWebSocket","transports","websocket","_packet","webtransport","_transport","WebTransport","transportOptions","closed","catch","createBidirectionalStream","stream","decoderStream","maxPayload","TextDecoder","state","expectedLength","isBinary","TransformStream","transform","controller","header","headerArray","DataView","getUint16","view","n","getUint32","pow","enqueue","createPacketDecoderStream","MAX_SAFE_INTEGER","reader","readable","pipeThrough","getReader","encoderStream","arrayBuffer","encoded","TextEncoder","encode","encodePacketToBinary","payloadLength","setUint8","setUint16","setBigUint64","BigInt","pipeTo","_writer","getWriter","read","done","polling","assign","re","parts","parse","src","b","replace","m","exec","source","host","authority","ipv6uri","pathNames","names","queryKey","$0","$1","$2","withEventListeners","OFFLINE_EVENT_LISTENERS","listener","SocketWithoutUpgrade","writeBuffer","_prevBufferLen","_pingInterval","_pingTimeout","_maxPayload","_pingTimeoutTime","Infinity","parsedUri","_transportsByName","t","transportName","agent","upgrade","rememberUpgrade","addTrailingSlash","rejectUnauthorized","perMessageDeflate","threshold","closeOnBeforeunload","qs","qry","pairs","l","pair","decodeURIComponent","_beforeunloadEventListener","transport","_offlineEventListener","_onClose","_cookieJar","createCookieJar","_open","createTransport","EIO","priorWebsocketSuccess","setTransport","_onDrain","_onPacket","flush","onHandshake","JSON","_sendPacket","_resetPingTimeout","code","pingInterval","pingTimeout","_pingTimeoutTimer","delay","upgrading","_getWritablePackets","payloadSize","c","utf8Length","ceil","_hasPingExpired","hasExpired","msg","options","compress","cleanupAndClose","waitForUpgrade","tryAllTransports","SocketWithUpgrade","_upgrades","_probe","failed","onTransportOpen","cleanup","freezeTransport","error","onTransportClose","onupgrade","to","_filterUpgrades","upgrades","filteredUpgrades","Socket","map","filter","withNativeFile","File","hasBinary","toJSON","isArray","deconstructPacket","buffers","packetData","pack","_deconstructPacket","attachments","placeholder","_placeholder","num","newData","reconstructPacket","_reconstructPacket","RESERVED_EVENTS","PacketType","Encoder","replacer","EVENT","ACK","encodeAsString","encodeAsBinary","BINARY_EVENT","BINARY_ACK","nsp","stringify","deconstruction","unshift","isObject","Decoder","reviver","add","reconstructor","decodeString","isBinaryEvent","BinaryReconstructor","takeBinaryData","start","buf","next","payload","tryParse","substr","isPayloadValid","CONNECT","DISCONNECT","CONNECT_ERROR","destroy","finishedReconstruction","reconPack","binData","freeze","connect","connect_error","disconnect","disconnecting","newListener","io","connected","recovered","receiveBuffer","sendBuffer","_queue","_queueSeq","ids","acks","flags","auth","_autoConnect","disconnected","subEvents","subs","onpacket","active","_readyState","_b","_c","retries","fromQueue","volatile","_addToQueue","ack","pop","_registerAckCallback","isTransportWritable","engine","isConnected","notifyOutgoingListeners","ackTimeout","timer","withError","emitWithAck","reject","arg1","arg2","tryCount","pending","responseArgs","_drainQueue","force","_sendConnectPacket","_pid","pid","offset","_lastOffset","_clearAcks","some","onconnect","onevent","onack","ondisconnect","message","emitEvent","_anyListeners","sent","emitBuffered","subDestroy","onAny","prependAny","offAny","listenersAny","onAnyOutgoing","_anyOutgoingListeners","prependAnyOutgoing","offAnyOutgoing","listenersAnyOutgoing","Backoff","ms","factor","jitter","attempts","duration","rand","deviation","floor","setMin","setMax","setJitter","Manager","nsps","reconnection","reconnectionAttempts","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","_parser","parser","encoder","decoder","autoConnect","v","_reconnection","skipReconnect","_reconnectionAttempts","_reconnectionDelay","_randomizationFactor","_reconnectionDelayMax","_timeout","maybeReconnectOnOpen","_reconnecting","reconnect","openSubDestroy","errorSub","onping","ondata","ondecoded","_destroy","_close","onreconnect","attempt","cache","parsed","loc","test","href","url","sameNamespace","forceNew","multiplex","INERTIA","canvas","querySelector","getContext","canvasResizeObserver","ResizeObserver","clientWidth","clientHeight","players","console","log","rooms","room","prompt","usrname","addUser","newPlayer","newPlayers","f","launchClientGame","setupUser","requestRoomChoices","observe","stop","updInter","setInterval","updateGame","scInter","randomIncrease","simulateScores","scoreboardBody","getElementById","innerHTML","sort","a","getTotalScore","row","createElement","toFixed","appendChild","updateScoreboard","requestAnimationFrame","render","find","playerId","fo","res","addFood","target","targetId","addKill","clearInterval","bonusList","container","querySelectorAll","style","display","bonusItem","className","img","text","innerText","clearRect","offsetX","offsetY","translate","drawDecor","drawFood","drawPlayer","drawName","resetTransform","angleDiff","abs","velocityX","cos","velocityY","sin","newX","newY","movePlayer","hypot","other","deltaXPlayer","deltaYPlayer","distanceToPlayer","handleKill","rect","getBoundingClientRect","canvasMiddleX","canvasMiddleY","atan2","clientY","clientX","playerSheetBody","nameRow","nameCell","textContent","colSpan","levelRow","levelCell","sizeRow","sizeCell","scoreRow","scoreCell","updatePlayerSheet"],"sourceRoot":""}